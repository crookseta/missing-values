using System.Runtime.InteropServices;

namespace MissingValues.Internals;

internal static class Constants
{
	public static class Log
	{
		public const int Intervals = 128;
		public const int Log2Intervals = 7;
		public const int TSIZE = Intervals + 1;

		private static ReadOnlySpan<TConstant> T => new TConstant[]
		{
			new(1f,0f, new Quad(0x0000_0000_0000_0000, 0x0000_0000_0000_0000)),
			new(0.9921875f, 0.007843178f, new Quad(0xBFDF_4EE4_31DA_E667, 0x4AFA_0C4B_FE16_E8FD)),
			new(0.984375f, 0.015748357f, new Quad(0xBFDF_DB29_EE2D_8371, 0x7BE9_18E1_1196_42AB)),
			new(0.9765625f, 0.023716526f, new Quad(0x3FE0_1919_57D1_7369, 0x7CF3_02CC_9476_F561)),
			new(0.96875f, 0.031748697f, new Quad(0x3FE1_3CE8_888E_02E7, 0x8EBA_9B11_13BC_1C18)),
			new(0.9609375f, 0.03984591f, new Quad(0xBFE1_7A43_82CE_6EB7, 0xBFA5_09BE_C8DA_5F22)),
			new(0.9550781f, 0.045962136f, new Quad(0xBFE0_72A2_1161_A107, 0x6749_86DC_DCA6_709C)),
			new(0.94921875f, 0.052116003f, new Quad(0xBFE1_E09D_E07C_B958, 0x897A_3EA4_6E84_ABB3)),
			new(0.94140625f, 0.06038051f, new Quad(0x3FD8_AE1E_EC1B_036C, 0x4849_93C5_49C4_BF40)),
			new(0.93359375f, 0.068713896f, new Quad(0xBFE2_D735_5325_D560, 0xD9E9_AB3D_6EBA_B580)),
			new(0.9277344f, 0.07500982f, new Quad(0xBFE1_F9F0_2D25_6D50, 0x3710_8F4E_C21E_48CD)),
			new(0.921875f, 0.08134564f, new Quad(0xBFE0_6FC0_A9D1_2C17, 0xA70F_7A68_4C59_6B12)),
			new(0.9140625f, 0.08985633f, new Quad(0x3FE2_5D58_1C1E_8DA9, 0x9DED_322F_B08B_8462)),
			new(0.90625f, 0.09844007f, new Quad(0xBFE0_535B_3BA8_F150, 0xAE09_996D_7BB4_653E)),
			new(0.90234375f, 0.102759734f, new Quad(0x3FDE_6378_6F52_51AE, 0xFE0D_ED34_C831_8F52)),
			new(0.89453125f, 0.11145544f, new Quad(0x3FDF_BC4B_2368_E32D, 0x5669_9C17_99A2_44D4)),
			new(0.8886719f, 0.1180272f, new Quad(0x3FE2_C609_0F68_4E67, 0x66AB_CECC_AB1D_7174)),
			new(0.8828125f, 0.12464245f, new Quad(0xBFE1_890A_A69A_C9F4, 0x215F_9393_6B70_9EFB)),
			new(0.8769531f, 0.13130173f, new Quad(0x3FE3_B998_5194_B6AF, 0xFD51_1B53_4B72_A28E)),
			new(0.87109375f, 0.13800567f, new Quad(0xBFE0_DC08_D61C_6EF1, 0xD9B2_EF7E_6868_0598)),
			new(0.8652344f, 0.14475486f, new Quad(0xBFE1_F72A_2DAC_729B, 0x3F46_6622_38A9_425A)),
			new(0.859375f, 0.1515499f, new Quad(0xBFE3_FD4D_FD3A_0AFB, 0x9691_AED4_D5E3_DF94)),
			new(0.8535156f, 0.15839143f, new Quad(0xBFE1_1B26_1216_29C4, 0x6C18_6384_993E_1C93)),
			new(0.84765625f, 0.16528009f, new Quad(0x3FE2_286D_633E_8E56, 0x97DC_6A40_2A56_FCE1)),
			new(0.8417969f, 0.17221653f, new Quad(0x3FDF_6128_EBA9_3677, 0x07EB_FA54_0E45_350C)),
			new(0.8359375f, 0.17920142f, new Quad(0x3FE3_6EAD_5773_90D3, 0x1EF0_F4C9_D43F_79B2)),
			new(0.83203125f, 0.18388528f, new Quad(0x3FE2_5113_1CCF_7C7B, 0x75E7_D900_B521_C48D)),
			new(0.8261719f, 0.19095245f, new Quad(0xBFE3_15E2_CD71_4BD0, 0x6508_AEB0_0D2A_E3E9)),
			new(0.8203125f, 0.19806992f, new Quad(0xBFE1_847F_406E_BD3A, 0xF804_85C2_F409_633C)),
			new(0.81640625f, 0.20284319f, new Quad(0x3FE2_C225_9904_D686, 0x5817_99FB_CE0B_5F19)),
			new(0.8105469f, 0.2100461f, new Quad(0x3FE3_ECE5_7A8D_5AE5, 0x4F55_0444_ECF8_B995)),
			new(0.8046875f, 0.21730128f, new Quad(0xBFE2_F109_D4BC_4595, 0x412B_5D25_17AA_AC13)),
			new(0.80078125f, 0.22216746f, new Quad(0x3FE2_BC03_DC27_1A74, 0xD3A8_5B5B_43C0_E727)),
			new(0.7949219f, 0.22951144f, new Quad(0xBFDE_BF2B_ADC0_DF84, 0x1A71_B79D_D564_5B46)),
			new(0.7890625f, 0.23690975f, new Quad(0xBFDC_8EFE_DEDD_89FB, 0xE0BC_FBE6_D6DB_9F66)),
			new(0.78515625f, 0.24187253f, new Quad(0x3FE2_373F_F977_BAA6, 0x911C_7BAF_CB4D_84FB)),
			new(0.78125f, 0.24686007f, new Quad(0x3FE3_9676_6F2F_B328, 0x337C_C050_C6D8_3B22)),
			new(0.7753906f, 0.25438833f, new Quad(0x3FE4_9BD0_76F7_C434, 0xE5FC_F1A2_12E2_A91E)),
			new(0.7714844f, 0.25943887f, new Quad(0xBFE4_A327_257A_F0F4, 0x65E5_ECAB_5F2A_6F81)),
			new(0.765625f, 0.26706278f, new Quad(0x3FE2_13F2_3DEF_19C5, 0xA0FE_396F_40F1_DDA9)),
			new(0.76171875f, 0.27217788f, new Quad(0x3FE4_759F_6E6B_37DE, 0x945A_049A_962E_66C6)),
			new(0.7578125f, 0.27731928f, new Quad(0x3FE2_AD35_CA6E_D514, 0x7BDB_6DDC_AF59_C425)),
			new(0.75390625f, 0.28248724f, new Quad(0x3FE4_A1D7_1A87_DEBA, 0x46BA_E982_7221_DC98)),
			new(0.7480469f, 0.29028964f, new Quad(0xBFE3_39E5_210C_2B73, 0x0E28_ABA0_01A9_B5E0)),
			new(0.7441406f, 0.29552525f, new Quad(0xBFE2_8F6E_BCFF_3ED7, 0x2E23_E134_31AD_C4A5)),
			new(0.7402344f, 0.30078843f, new Quad(0xBFE4_AA26_8BE3_9AAB, 0x7148_E8D8_0CAA_10B7)),
			new(0.7363281f, 0.30607945f, new Quad(0xBFE4_4C88_1583_9C56, 0x6366_3D15_FAED_7771)),
			new(0.73046875f, 0.31406882f, new Quad(0x3FE2_EAF4_6390_DBB2, 0x4382_7391_8DB7_DF5C)),
			new(0.7265625f, 0.31943077f, new Quad(0x3FE2_38E2_0D83_1F69, 0x8298_ADDD_D7F3_2686)),
			new(0.72265625f, 0.32482162f, new Quad(0xBFE1_E8D3_C411_2361, 0x5B14_7A5D_47BC_208F)),
			new(0.71875f, 0.33024168f, new Quad(0x3FE3_CE28_F5F3_840B, 0x263A_CB43_5110_4631)),
			new(0.71484375f, 0.3356913f, new Quad(0xBFE4_86E5_C0A4_2423, 0x457E_22D8_C650_B355)),
			new(0.7109375f, 0.34117076f, new Quad(0xBFE0_4D41_A0B2_A08A, 0x465D_C513_B13F_567D)),
			new(0.70703125f, 0.3466804f, new Quad(0x3FE4_6755_8927_7063, 0x3947_FFE6_51E7_352F)),
			new(0.703125f, 0.3522206f, new Quad(0xBFE1_6395_EBE5_9B15, 0x228B_FE87_98D1_0FF0)),
			new(0.69921875f, 0.35779163f, new Quad(0x3FE3_ABC6_5C85_95F0, 0x88B6_1A33_5F5B_688C)),
			new(0.6953125f, 0.3633939f, new Quad(0xBFE4_2730_89D3_DAD8, 0x8E7D_353E_9967_D548)),
			new(0.69140625f, 0.3690277f, new Quad(0x3FE4_0F9F_67B1_F4BB, 0xF45D_E06E_CEBF_AF6D)),
			new(0.6875f, 0.37469345f, new Quad(0xBFE3_09FA_B904_8640, 0x92B3_4EDD_A19A_831E)),
			new(0.68359375f, 0.38039148f, new Quad(0xBFE4_1246_80AA_4333, 0x3221_D8A9_B475_A6BA)),
			new(0.6816406f, 0.3832527f, new Quad(0xBFE3_F360_CC47_10FB, 0xFE24_B633_F4E8_D84D)),
			new(0.6777344f, 0.38899985f, new Quad(0xBFE3_32D9_1F21_D89C, 0x89C4_5003_FC5D_7807)),
			new(0.6738281f, 0.39478022f, new Quad(0xBFE4_6BF9_B4D1_F8DA, 0x8002_F244_9E17_4504)),
			new(0.6699219f, 0.40059417f, new Quad(0x3FE2_9DEB_5CE6_A6A8, 0x717D_5626_E16A_CC7D)),
			new(0.6660156f, 0.40644214f, new Quad(0x3FE4_A29F_B48F_7D3C, 0xA87D_ABF3_51AA_41F4)),
			new(0.6640625f, 0.409379f, new Quad(0x3FE2_127D_3C64_57F9, 0xD79F_51DC_C730_14C9)),
			new(0.66015625f, 0.41527873f, new Quad(0xBFE2_BA93_0E48_6A0A, 0xC42D_1BF9_1991_88E7)),
			new(0.65625f, 0.42121348f, new Quad(0xBFE4_B6E6_45F3_1549, 0xDD11_60BC_C45C_7E2C)),
			new(0.65234375f, 0.42718363f, new Quad(0x3FE3_118A_4254_94B6, 0x1066_5377_F156_25B6)),
			new(0.6503906f, 0.43018213f, new Quad(0x3FE3_966F_24D2_9D3A, 0x2D1B_2176_0104_78BE)),
			new(0.6464844f, 0.43620625f, new Quad(0xBFE1_D8E5_2EB2_248F, 0x0C95_DD83_626D_7333)),
			new(0.6425781f, 0.44226688f, new Quad(0xBFE3_EE37_0F96_E6B6, 0x7CCB_006A_5B98_90EA)),
			new(0.640625f, 0.445311f, new Quad(0x3FE3_D155_3249_11F5, 0x6DB2_8DA4_D629_D00A)),
			new(0.63671875f, 0.45142725f, new Quad(0xBFE3_FE6E_2F2F_867D, 0x8F4D_60C7_1334_6641)),
			new(0.6328125f, 0.4575811f, new Quad(0x3FE3_B7BE_9ADD_7F4D, 0x3B3D_406B_6CBF_3CE5)),
			new(0.6308594f, 0.4606723f, new Quad(0x3FE4_B3CF_B3F7_511D, 0xD736_9260_9040_CCC2)),
			new(0.6269531f, 0.4668835f, new Quad(0xBFE4_220D_E1F7_3019, 0x01B8_AD85_C25A_FD09)),
			new(0.625f, 0.47000363f, new Quad(0xBFE3_7636_4C9A_C81C, 0xC8A4_DFB8_04DE_6867)),
			new(0.62109375f, 0.47627324f, new Quad(0x3FE2_EED6_B9AA_FAC8, 0xD42F_78D3_E65D_3727)),
			new(0.6191406f, 0.47942284f, new Quad(0x3FE4_D593_2186_75AF, 0x2696_47B7_83D8_8999)),
			new(0.6152344f, 0.485752f, new Quad(0xBFDF_3E8E_B7DA_053E, 0x0637_1461_5F7C_C91D)),
			new(0.61328125f, 0.48893163f, new Quad(0x3FE4_C063_259B_CADE, 0x0295_1686_D537_3AEC)),
			new(0.609375f, 0.49532142f, new Quad(0x3FE4_EF49_1085_FA3C, 0x1649_3496_3053_1502)),
			new(0.6074219f, 0.4985317f, new Quad(0x3FE4_D607_A7C2_B8C5, 0x3206_19FB_9433_D841)),
			new(0.6035156f, 0.50498337f, new Quad(0xBFE5_2AD3_8170_04F3, 0xF0BD_FF99_F932_B273)),
			new(0.6015625f, 0.50822484f, new Quad(0xBFE2_89FC_5311_7F9E, 0x54E7_8103_A2BC_1767)),
			new(0.59765625f, 0.5147395f, new Quad(0x3FE4_4CF1_5A04_8907, 0xB7D7_F47D_DB45_C5A3)),
			new(0.5957031f, 0.5180128f, new Quad(0x3FE5_CBB1_D35F_B828, 0x73B0_4A9A_F1DD_692C)),
			new(0.5917969f, 0.5245918f, new Quad(0x3FE5_1286_39B8_14F9, 0xB977_0D8C_B657_3540)),
			new(0.58984375f, 0.5278976f, new Quad(0x3FE4_8473_3853_300F, 0x002E_836D_FD47_BD41)),
			new(0.5878906f, 0.53121436f, new Quad(0x3FE3_09D2_3AEF_77DD, 0x5CD7_CC94_306F_B3FF)),
			new(0.5839844f, 0.5378811f, new Quad(0xBFE5_A81E_F367_A59D, 0xE2B4_1EEE_BD55_0702)),
			new(0.58203125f, 0.54123116f, new Quad(0xBFE5_21AD_3DBB_2F45, 0x275C_917A_30DF_4AC9)),
			new(0.5800781f, 0.5445925f, new Quad(0xBFE4_CFB9_8162_8AF7, 0x1A89_DF4E_6DF2_E93B)),
			new(0.5761719f, 0.5513493f, new Quad(0xBFE4_D217_30EA_76CF, 0xDEC3_6782_8734_CAE5)),
			new(0.57421875f, 0.55474484f, new Quad(0x3FE5_35CC_00E5_66F7, 0x6B87_3338_91E0_DEC4)),
			new(0.5722656f, 0.558152f, new Quad(0xBFE3_0FCB_5DF2_57A2, 0x63E3_BF44_6C6E_3F69)),
			new(0.5683594f, 0.56500137f, new Quad(0xBFE4_6E17_1B15_433D, 0x723A_4C73_80A4_48D8)),
			new(0.56640625f, 0.5684437f, new Quad(0xBFE4_D050_DA07_F323, 0x6F33_0972_DA2A_7A87)),
			new(0.5644531f, 0.5718979f, new Quad(0x3FE4_BE03_669A_5268, 0xD211_48C6_002B_ECD3)),
			new(0.5605469f, 0.5788424f, new Quad(0x3FE4_0B28_E0E2_6C33, 0x6AF9_0E00_5333_23BA)),
			new(0.55859375f, 0.5823328f, new Quad(0x3FE5_A1D8_20DA_57CF, 0x2F10_5A89_0600_46AA)),
			new(0.5566406f, 0.58583546f, new Quad(0xBFE4_9EF8_F13A_E3CF, 0x1624_09D8_EA99_D4C0)),
			new(0.5546875f, 0.5893504f, new Quad(0xBFE5_09E4_17A6_E507, 0xB9DC_10DA_C743_AD7A)),
			new(0.55078125f, 0.59641755f, new Quad(0x3FE4_0D01_A2C5_B0E9, 0x7C49_90B2_3D9A_C1F5)),
			new(0.5488281f, 0.59997f, new Quad(0xBFE5_D6A5_0D4B_61EA, 0x7454_0BDD_2AA9_9A42)),
			new(0.546875f, 0.603535f, new Quad(0x3FE5_B3B1_90B8_3F95, 0x27E6_ABA8_F2D7_83C1)),
			new(0.5449219f, 0.6071128f, new Quad(0x3FE5_3A69_FAD7_E7AB, 0xE7BA_81C6_64C1_07E0)),
			new(0.54296875f, 0.6107035f, new Quad(0xBFE5_1CD1_2316_F576, 0xAAD3_48AE_7986_7223)),
			new(0.5410156f, 0.6143071f, new Quad(0x3FE4_C95C_444B_807A, 0x2467_26B3_04CC_AE56)),
			new(0.5371094f, 0.62155354f, new Quad(0xBFE4_B9C2_24EA_698C, 0x2F9B_4746_6D61_23FE)),
			new(0.53515625f, 0.6251965f, new Quad(0x3FE2_25CA_9318_6CF0, 0xF38B_4619_A248_3399)),
			new(0.5332031f, 0.62885284f, new Quad(0xBFE4_EE38_A7BC_228B, 0x3597_043B_E78E_AF49)),
			new(0.53125f, 0.6325226f, new Quad(0xBFE5_A0DB_8766_13D2, 0x0414_7DC6_9A07_A649)),
			new(0.5292969f, 0.6362058f, new Quad(0x3FE4_9322_4E85_16C0, 0x08D3_602A_7B41_C6E8)),
			new(0.52734375f, 0.63990265f, new Quad(0x3FE4_FA28_B4D2_541A, 0xCA7D_5844_606B_2421)),
			new(0.5253906f, 0.6436132f, new Quad(0x3FE5_C1B5_760F_B457, 0x1ACB_CFB0_3F16_DAF4)),
			new(0.5214844f, 0.65107596f, new Quad(0x3FE3_FED5_D0F6_5949, 0xC0A3_45AD_743A_E1AE)),
			new(0.51953125f, 0.6548283f, new Quad(0x3FE3_AD27_0C9D_7493, 0x6238_2A76_8847_9E24)),
			new(0.5175781f, 0.6585948f, new Quad(0x3FE4_99FF_15CE_5326, 0x61EA_9643_A3A2_D378)),
			new(0.515625f, 0.6623755f, new Quad(0x3FE4_A19E_15CC_C45D, 0x2575_30A6_82B8_0490)),
			new(0.5136719f, 0.6661706f, new Quad(0xBFE3_21A1_4EC5_32B3, 0x5BA3_E1F8_68FD_0B5E)),
			new(0.51171875f, 0.6699801f, new Quad(0x3FE4_AEE3_1998_0BFF, 0x3303_DD48_1779_DF69)),
			new(0.5097656f, 0.6738042f, new Quad(0xBFE3_8FFD_9E39_0034, 0x5A85_D2D8_6161_742E)),
			new(0.5078125f, 0.677643f, new Quad(0xBFE3_E4DB_102C_E29F, 0x79B0_26B6_4B42_CAA1)),
			new(0.5058594f, 0.68149656f, new Quad(0x3FE2_7C35_C55A_04A8, 0x2AB1_9F77_652D_977A)),
			new(0.50390625f, 0.685365f, new Quad(0x3FE5_4483_2404_7019, 0xB48D_7B98_C1CF_7234)),
			new(0.5019531f, 0.68924856f, new Quad(0xBFE5_750E_E391_5A19, 0x7E9C_7359_DD94_152F)),
			new(0.5f, LN2HI, LN2LO)
		};
		private static ReadOnlySpan<UConstant> U => new UConstant[]
		{
			new(1f, 0f),
			new(1.0078125f, -6.1035156E-05f),
			new(1.015625f, -0.00024414062f),
			new(1.0234375f, -0.0005493164f),
			new(1.03125f, -0.0009765625f),
			new(1.0390625f, -0.0015258789f),
			new(1.046875f, -0.00015258789f),
			new(1.0546875f, 0.0011291504f),
			new(1.0625f, 0.00024414062f),
			new(1.0703125f, -0.00076293945f),
			new(1.078125f, 0.00021362305f),
			new(1.0859375f, 0.0010986328f),
			new(1.09375f, -0.00024414062f),
			new(1.1015625f, -0.0017089844f),
			new(1.109375f, 0.0010375977f),
			new(1.1171875f, -0.00064086914f),
			new(1.125f, -0.00024414062f),
			new(1.1328125f, 6.1035156E-05f),
			new(1.140625f, 0.0002746582f),
			new(1.1484375f, 0.00039672852f),
			new(1.15625f, 0.0004272461f),
			new(1.1640625f, 0.00036621094f),
			new(1.171875f, 0.00021362305f),
			new(1.1796875f, -3.0517578E-05f),
			new(1.1875f, -0.00036621094f),
			new(1.1953125f, -0.00079345703f),
			new(1.203125f, 0.0010375977f),
			new(1.2109375f, 0.00044250488f),
			new(1.21875f, -0.00024414062f),
			new(1.2265625f, 0.001373291f),
			new(1.234375f, 0.0005187988f),
			new(1.2421875f, -0.0004272461f),
			new(1.25f, 0.0009765625f),
			new(1.2578125f, -0.0001373291f),
			new(1.265625f, -0.0013427734f),
			new(1.2734375f, -0.00015258789f),
			new(1.28125f, 0.0009765625f),
			new(1.2890625f, -0.00047302246f),
			new(1.296875f, 0.0005187988f),
			new(1.3046875f, -0.0010986328f),
			new(1.3125f, -0.00024414062f),
			new(1.3203125f, 0.0005493164f),
			new(1.328125f, 0.0012817383f),
			new(1.3359375f, -0.00065612793f),
			new(1.34375f, -6.1035156E-05f),
			new(1.3515625f, 0.00047302246f),
			new(1.359375f, 0.0009460449f),
			new(1.3671875f, -0.0013122559f),
			new(1.375f, -0.0009765625f),
			new(1.3828125f, -0.0007019043f),
			new(1.390625f, -0.00048828125f),
			new(1.3984375f, -0.00033569336f),
			new(1.40625f, -0.00024414062f),
			new(1.4140625f, -0.00021362305f),
			new(1.421875f, -0.00024414062f),
			new(1.4296875f, -0.00033569336f),
			new(1.4375f, -0.00048828125f),
			new(1.4453125f, -0.0007019043f),
			new(1.453125f, -0.0009765625f),
			new(1.4609375f, -0.0013122559f),
			new(1.46875f, 0.001159668f),
			new(1.4765625f, 0.0007171631f),
			new(1.484375f, 0.00021362305f),
			new(1.4921875f, -0.00035095215f),
			new(1.5f, -0.0009765625f),
			new(1.5078125f, 0.0012817383f),
			new(1.515625f, 0.0005493164f),
			new(1.5234375f, -0.00024414062f),
			new(1.53125f, -0.0010986328f),
			new(1.5390625f, 0.0009918213f),
			new(1.546875f, 3.0517578E-05f),
			new(1.5546875f, -0.0009918213f),
			new(1.5625f, 0.0009765625f),
			new(1.5703125f, -0.00015258789f),
			new(1.578125f, -0.0013427734f),
			new(1.5859375f, 0.00050354004f),
			new(1.59375f, -0.00079345703f),
			new(1.6015625f, 0.0009765625f),
			new(1.609375f, -0.0004272461f),
			new(1.6171875f, 0.0012664795f),
			new(1.625f, -0.00024414062f),
			new(1.6328125f, 0.001373291f),
			new(1.640625f, -0.00024414062f),
			new(1.6484375f, 0.0012969971f),
			new(1.65625f, -0.0004272461f),
			new(1.6640625f, 0.0010375977f),
			new(1.671875f, -0.00079345703f),
			new(1.6796875f, 0.0005950928f),
			new(1.6875f, -0.0013427734f),
			new(1.6953125f, -3.0517578E-05f),
			new(1.703125f, 0.0012512207f),
			new(1.7109375f, -0.0008392334f),
			new(1.71875f, 0.00036621094f),
			new(1.7265625f, 0.0015411377f),
			new(1.734375f, -0.0007019043f),
			new(1.7421875f, 0.00039672852f),
			new(1.75f, 0.0014648438f),
			new(1.7578125f, -0.00093078613f),
			new(1.765625f, 6.1035156E-05f),
			new(1.7734375f, 0.0010223389f),
			new(1.78125f, -0.0015258789f),
			new(1.7890625f, -0.00064086914f),
			new(1.796875f, 0.00021362305f),
			new(1.8046875f, 0.0010375977f),
			new(1.8125f, -0.0017089844f),
			new(1.8203125f, -0.0009613037f),
			new(1.828125f, -0.00024414062f),
			new(1.8359375f, 0.00044250488f),
			new(1.84375f, 0.0010986328f),
			new(1.8515625f, 0.0017242432f),
			new(1.859375f, -0.0013122559f),
			new(1.8671875f, -0.00076293945f),
			new(1.875f, -0.00024414062f),
			new(1.8828125f, 0.00024414062f),
			new(1.890625f, 0.0007019043f),
			new(1.8984375f, 0.0011291504f),
			new(1.90625f, 0.0015258789f),
			new(1.9140625f, -0.0018463135f),
			new(1.921875f, -0.0015258789f),
			new(1.9296875f, -0.0012359619f),
			new(1.9375f, -0.0009765625f),
			new(1.9453125f, -0.00074768066f),
			new(1.953125f, -0.0005493164f),
			new(1.9609375f, -0.00038146973f),
			new(1.96875f, -0.00024414062f),
			new(1.9765625f, -0.0001373291f),
			new(1.984375f, -6.1035156E-05f),
			new(1.9921875f, -1.5258789E-05f),
			new(2f, 0f)
		};

		public static Quad P2 => new Quad(0xBFFE_0000_0000_0000, 0x0000_0000_0000_0000);
		public static Quad P3 => new Quad(0x3FFD_5555_5555_5555, 0x5555_5555_5555_4D42);
		public static Quad P4 => new Quad(0xBFFC_FFFF_FFFF_FFFF, 0xFFFF_FFFF_FFDA_B14E);
		public static Quad P5 => new Quad(0x3FFC_9999_9999_9999, 0x9999_999A_6D35_67F4);
		public static Quad P6 => new Quad(0xBFFC_5555_5555_5555, 0x5555_5672_67A5_8E13);
		public static Quad P7 => new Quad(0x3FFC_2492_4924_9249, 0x248E_D79A_0AE4_34DE);
		public static Quad P8 => new Quad(0xBFFB_FFFF_FFFF_FFFF, 0xFA13_E917_65E4_6140);
		public static Quad P9 => new Quad(0x3FFB_C71C_71C7_1C7E, 0xD54D_6D66_A8B2_C988);
		public static Quad P10 => new Quad(0xBFFB_9999_9999_A0A9, 0x1EA5_57FE_E717_E405);
		public static Quad P11 => new Quad(0x3FFB_745D_1739_6211, 0x107D_5489_11E4_3450);
		public static Quad P12 => new Quad(0xBFFB_5555_5172_2C7A, 0x2FC3_D1C0_7002_5776);
		public static Quad P13 => new Quad(0x3FFB_3B19_8520_4A4A, 0xE07C_9C4B_3F70_D6F0);
		public static Quad P14 => new Quad(0xBFFB_2562_276C_DC5C, 0xFF73_89B1_89F8_903B);

		public const double InvLn10Hi = 4.3429448176175356e-1;
		public const double InvLn2Hi = 1.4426950402557850e0;

		public static Quad InvLn10Lo => new Quad(0x3FDE_3728_7195_355B, 0xAAAF_AD33_DC32_3EE3);
		public static Quad InvLn2Lo => new Quad(0x3FE0_5C17_F0BB_BE87, 0xFED0_691D_3E88_EB57);
		public static Quad InvLn10LoPHi => new Quad(0x3FFD_BCB7_B152_6E50, 0xE36B_E631_DFF2_801F);
		public static Quad InvLn2LoPHi => new Quad(0x3FFF_7154_7652_B82F, 0xE24D_68D5_7C9B_F07B);

		public const float LN2HI = 0.693147182464599609375f;
		public static Quad LN2LO => new Quad(0xBFE2_05C6_10CA_86C3, 0x898C_FF81_A12A_17E2);

		public static float G(int index) => T[index].G;
		public static float FHi(int index) => T[index].FHi;
		public static Quad FLo(int index) => T[index].FLo;
		public static float E(int index) => U[index].E;
		public static float H(int index) => U[index].H;

		private record struct TConstant(float G, float FHi, Quad FLo);
		private record struct UConstant(float H, float E);

		public struct LD
		{
			public Quad Hi;
			public Quad Lo;
			public int LoSet;
		}
	}
	public static class Asin
	{
		public static Quad pS0 => new Quad(0x3FFC_5555_5555_5555, 0x5555_5555_5555_5ACB);
		public static Quad pS1 => new Quad(0xBFFE_7733_C865_9C3C, 0x29EA_3614_B02F_2E41);
		public static Quad pS2 => new Quad(0x3FFF_5797_9B5B_674E, 0x91B5_0237_574C_7D1E);
		public static Quad pS3 => new Quad(0xBFFF_5328_2885_3E02, 0x7A76_AE0D_EC75_A3DC);
		public static Quad pS4 => new Quad(0x3FFE_85BC_D120_445D, 0x1E68_6012_F127_DCD9);
		public static Quad pS5 => new Quad(0xBFFD_0650_52B7_026F, 0x590C_744B_6978_9B90);
		public static Quad pS6 => new Quad(0x3FFA_89CD_FE96_9597, 0xD61A_8F51_A8DD_0C37);
		public static Quad pS7 => new Quad(0xBFF7_2203_159A_1D9D, 0x9944_1478_415C_791C);
		public static Quad pS8 => new Quad(0x3FF2_2F25_83B7_EC31, 0x8DDA_1ADA_B639_2121);
		public static Quad pS9 => new Quad(0xBFE8_C42C_02E3_4D40, 0x972F_241C_19F8_A186);
		public static Quad qS1 => new Quad(0xC001_3633_A319_01F9, 0xEC3C_755C_50ED_E994);
		public static Quad qS2 => new Quad(0x4002_3EEB_09AC_020A, 0x0443_12EC_E6E7_A13E);
		public static Quad qS3 => new Quad(0xC002_6A2B_54F9_B826, 0x9216_B712_3B22_1EAB);
		public static Quad qS4 => new Quad(0x4001_EF5C_E06F_68D3, 0xB151_4081_08B0_3471);
		public static Quad qS5 => new Quad(0xC000_A11D_BB7D_E998, 0x9DDC_9D89_0C3A_63C4);
		public static Quad qS6 => new Quad(0x3FFE_A7D9_6024_76DB, 0x8849_72B3_5236_11EE);
		public static Quad qS7 => new Quad(0xBFFB_E679_5462_B32C, 0xA615_34B1_42EE_9992);
		public static Quad qS8 => new Quad(0x3FF8_10D3_9D46_3279, 0x7749_8241_5549_DFE3);
		public static Quad qS9 => new Quad(0xBFF2_A230_064A_F874, 0x87AA_66DC_CC58_B501);

		public static Quad R(Quad z)
		{
			Quad p, q;
			p = z * (pS0 + z * (pS1 + z * (pS2 + z * (pS3 + z * (pS4 + z * (pS5 + z * (pS6 + z * (pS7 + z * (pS8 + z * pS9)))))))));
			q = Quad.One + z * (qS1 + z * (qS2 + z * (qS3 + z * (qS4 + z * (qS5 + z * (qS6 + z * (qS7 + z * (qS8 + z * qS9))))))));
			return p / q;
		}
	}
	public static class Atan
	{
		public static ReadOnlySpan<Quad> AtanHi => new Quad[4]
		{
			new Quad(0x3FFD_DAC6_7056_1BB4, 0xF68A_DFC8_8BD9_7875),
			new Quad(0x3FFE_921F_B544_42D1, 0x8469_898C_C517_01B8),
			new Quad(0x3FFE_F730_BD28_1F69, 0xB200_F10F_5E19_7794),
			new Quad(0x3FFF_921F_B544_42D1, 0x8469_898C_C517_01B8),
		};
		public static ReadOnlySpan<Quad> AtanLo => new Quad[4]
		{
			new Quad(0x3F89_A06D_C282_B0E4, 0xC39B_E01C_59E2_DCDD),
			new Quad(0x3F8B_CD12_9024_E088, 0xA67C_C740_20BB_EA64),
			new Quad(0xBF8B_EBE5_66C9_9ADA, 0x9F23_1BCC_AE27_916C),
			new Quad(0x3F8C_CD12_9024_E088, 0xA67C_C740_20BB_EA64),
		};
		public static ReadOnlySpan<Quad> AT => new Quad[24]
		{
			new Quad(0x3FFD_5555_5555_5555, 0x5555_5555_5555_5551),
			new Quad(0xBFFC_9999_9999_9999, 0x9999_9999_9999_149E),
			new Quad(0x3FFC_2492_4924_9249, 0x2492_4924_9079_4362),
			new Quad(0xBFFB_C71C_71C7_1C71, 0xC71C_71C1_C2AF_E323),
			new Quad(0x3FFB_745D_1745_D174, 0x5D17_4185_B65D_7596),
			new Quad(0xBFFB_3B13_B13B_13B1, 0x3B11_8C19_75E2_A610),
			new Quad(0x3FFB_1111_1111_1111, 0x1057_D0A5_38CA_D4F9),
			new Quad(0xBFFA_E1E1_E1E1_E1E1, 0x889E_87FC_4C05_8330),
			new Quad(0x3FFA_AF28_6BCA_1AE2, 0x8E03_7B91_71F0_F80C),
			new Quad(0xBFFA_8618_6186_1632, 0x788A_5CC7_2D12_DD95),
			new Quad(0x3FFA_642C_8590_766C, 0xAC82_36DD_0429_4B9B),
			new Quad(0xBFFA_47AE_1475_D4D4, 0x58F3_E5A9_9BC9_E94B),
			new Quad(0x3FFA_2F68_4B82_58F7, 0x459A_07ED_D01D_F529),
			new Quad(0xBFFA_1A7B_9140_F096, 0x5161_0294_D698_0DCE),
			new Quad(0x3FFA_0841_D983_C8EF, 0xF246_7423_A0A8_6E23),
			new Quad(0xBFF9_F078_1F2D_5643, 0x79FD_ACD9_A939_4763),
			new Quad(0x3FF9_D3FE_EE0C_8B8D, 0xBEED_3888_2F4E_9337),
			new Quad(0xBFF9_BA14_C1DA_11FB, 0x7C8B_AE68_A03D_216F),
			new Quad(0x3FF9_A078_FBEB_F61B, 0xE4A8_F661_AE4E_EFE2),
			new Quad(0xBFF9_8129_5361_0BD4, 0x4D6F_FEC7_D9A2_3D57),
			new Quad(0x3FF9_4F98_EB13_94EE, 0xE119_CF2D_75D7_C25B),
			new Quad(0xBFF8_FA3B_3B6B_7AE1, 0xB137_A049_9210_FD65),
			new Quad(0x3FF8_1B46_E017_27FC, 0x7DCF_338D_5EAA_9BA0),
			new Quad(0xBFF6_52D9_4B40_71FF, 0x85CE_62C9_80D9_F92C),
		};

		public static Quad Even(Quad x)
		{
			return (AT[0] + x * (AT[2] + x * (AT[4] + x * (AT[6] + x * (AT[8] +
				x * (AT[10] + x * (AT[12] + x * (AT[14] + x * (AT[16] +
				x * (AT[18] + x * (AT[20] + x * AT[22])))))))))));
		}
		public static Quad Odd(Quad x)
		{
			return (AT[1] + x * (AT[3] + x * (AT[5] + x * (AT[7] + x * (AT[9] +
				x * (AT[11] + x * (AT[13] + x * (AT[15] + x * (AT[17] +
				x * (AT[19] + x * (AT[21] + x * AT[23])))))))))));
		}
	}
	public static class Cos
	{
		// Domain [-0.7854, 0.7854], range ~[-1.80e-37, 1.79e-37]:
		// |cos(newBase) - c(newBase))| < 2**-122.0
		private static Quad C1 => new Quad(0x3FFA_5555_5555_5555, 0x5555_5555_5555_5548);
		private static Quad C2 => new Quad(0xBFF5_6C16_C16C_16C1, 0x6C16_C16C_16BF_5C98);
		private static Quad C3 => new Quad(0x3FEF_A01A_01A0_1A01, 0xA01A_019F_FFC4_B13D);
		private static Quad C4 => new Quad(0xBFE9_27E4_FB77_89F5, 0xC72E_EF94_869C_AC2A);
		private static Quad C5 => new Quad(0x3FE2_1EED_8EFF_8D89, 0x7B51_B5F6_2EA9_599A);
		private static Quad C6 => new Quad(0xBFDA_9397_4A8C_07C9, 0xC2A3_8FC4_4BBC_8DF5);
		private static Quad C7 => new Quad(0x3FD2_AE7F_3E73_3B48, 0xDDA7_3725_A8CB_76C2);
		private static Quad C8 => new Quad(0xBFCA_6827_863B_100E, 0xC1D2_05BD_6344_4584);
		private static Quad C9 => new Quad(0x3FC1_E542_B8A1_08C0, 0x71EB_27E7_68BA_79E3);
		private static Quad C10 => new Quad(0xBFB9_0CE2_0CD8_68A2, 0x04B8_FF44_E6BF_56E0);
		private static Quad C11 => new Quad(0x3FAF_EF81_27D7_65B0, 0x90B7_B2A6_9D9B_4DA3);

		public static Quad Poly(in Quad z)
		{
			return (z * (C1 + z * (C2 + z * (C3 + z * (C4 + z * (C5 + z * (C6 + z * (C7 + z * (C8 + z * (C9 + z * (C10 + z * C11)))))))))));
		}
	}
	public static class Exp
	{
		public const int Intervals = 128;
		public const int Log2Intervals = 7;
		public const int TBLBITS = 7;
		public const int TBLSIZE = (1 << TBLBITS);

		public static Quad TINY => new Quad(0x18EF_0000_0000_0000, 0x0000_0000_0000_0000);

		public static Quad O_THRESHOLD => new Quad(0x400C_62E4_2FEF_A39E, 0xF357_93C7_6730_07E5);
		public static Quad U_THRESHOLD => new Quad(0xC00C_654B_B3B2_C73E, 0xBB05_9FAB_B506_FF33);

		public static Quad L1 => new Quad(0x3FF7_62E4_2FEF_A39E, 0xF357_93C7_6800_0000);
		public const double L2 = -1.0253670638894731e-29;
		public const double INV_L = 1.8466496523378731e+2;

		public static Quad A2 => new Quad(0x3FFE_0000_0000_0000, 0x0000_0000_0000_0000);
		public static Quad A3 => new Quad(0x3FFC_5555_5555_5555, 0x5555_5555_554B_7525);
		public static Quad A4 => new Quad(0x3FFA_5555_5555_5555, 0x5555_5555_5518_49BB);
		public static Quad A5 => new Quad(0x3FF8_1111_1111_1111, 0x1111_1841_CBEC_C116);
		public static Quad A6 => new Quad(0x3FF5_6C16_C16C_16C1, 0x6C16_F5C1_B4A5_137E);

		public const double A7 = 1.9841269841269470e-4;
		public const double A8 = 2.4801587301585286e-5;
		public const double A9 = 2.7557324277411235e-6;
		public const double A10 = 2.7557333722375069e-7;

		public static Quad P1 => new Quad(0x3FFE_62E4_2FEF_A39E, 0xF358_0000_0000_0000);
		public static Quad P2 => new Quad(0x3FFC_EBFB_DFF8_2C58, 0xEA86_0000_0000_0000);
		public static Quad P3 => new Quad(0x3FFA_C6B0_8D70_4A0B, 0xF8B4_0000_0000_0000);
		public static Quad P4 => new Quad(0x3FF8_3B2A_B6FB_A4E7, 0x729C_0000_0000_0000);
		public static Quad P5 => new Quad(0x3FF5_5D87_FE78_A673, 0x1108_0000_0000_0000);
		public static Quad P6 => new Quad(0x3FF2_4309_12F8_6C78, 0x76F4_0000_0000_0000);

		public const double P7 = 1.52527338040596140779402503651063227608e-05;
		public const double P8 = 1.32154867901441125734062539270885494602e-06;
		public const double P9 = 1.01780877050780307255070818422265643832e-07;
		public const double P10 = 7.05491279594400222715807284969494195259e-09;
		public const double redux = 60847228810955011271841753858048d;

		public static ReadOnlySpan<Quad> Tbl => new Quad[TBLSIZE]
		{
			new Quad(0x3FFE_6A09_E667_F3BC, 0xC908_B2FB_1366_DFEA),
			new Quad(0x3FFE_6C01_2750_BDAB, 0xEED7_6A99_800F_4EDE),
			new Quad(0x3FFE_6DFB_23C6_51A2, 0xEF22_0E2C_BE1B_C0D4),
			new Quad(0x3FFE_6FF7_DF95_1948, 0x3CF8_7E1B_4F3E_1E98),
			new Quad(0x3FFE_71F7_5E8E_C5F7, 0x3DD2_370F_2EF0_B148),
			new Quad(0x3FFE_73F9_A48A_5817, 0x3BD5_C9A4_E68A_B074),
			new Quad(0x3FFE_75FE_B564_267C, 0x8BF6_E9AA_33A4_89A8),
			new Quad(0x3FFE_7806_94FD_E5D3, 0xF619_AE02_8085_92A4),
			new Quad(0x3FFE_7A11_473E_B018, 0x6D7D_5102_3F6C_CB1A),
			new Quad(0x3FFE_7C1E_D013_0C13, 0x27C4_9334_4593_78DE),
			new Quad(0x3FFE_7E2F_336C_F4E6, 0x2105_D02B_A157_9756),
			new Quad(0x3FFE_8042_7543_E1A1, 0x1B60_DE67_649A_3842),
			new Quad(0x3FFE_8258_9994_CCE1, 0x28AC_F88A_FAB3_4928),
			new Quad(0x3FFE_8471_A462_3C7A, 0xCCE5_2F6B_97C6_444C),
			new Quad(0x3FFE_868D_99B4_492E, 0xC80E_41D9_0AC2_556A),
			new Quad(0x3FFE_88AC_7D98_A669, 0x9665_30BC_DF2D_4CC0),
			new Quad(0x3FFE_8ACE_5422_AA0D, 0xB5BA_7C55_A192_C648),
			new Quad(0x3FFE_8CF3_216B_5448, 0xBEF2_AA1C_D161_C57A),
			new Quad(0x3FFE_8F1A_E991_5773, 0x62B9_8274_5C72_EDDA),
			new Quad(0x3FFE_9145_B0B9_1FFC, 0x588A_61B4_69F6_B6A0),
			new Quad(0x3FFE_9373_7B0C_DC5E, 0x4F45_01C3_F254_0AE8),
			new Quad(0x3FFE_95A4_4CBC_8520, 0xEE9B_4836_95A0_E7FE),
			new Quad(0x3FFE_97D8_29FD_E4E4, 0xF8B9_E920_F91E_8EB6),
			new Quad(0x3FFE_9A0F_170C_A07B, 0x9BA3_109B_8C46_7844),
			new Quad(0x3FFE_9C49_182A_3F09, 0x01C7_C46B_071F_28DE),
			new Quad(0x3FFE_9E86_319E_3232, 0x3182_4CA7_8E64_C462),
			new Quad(0x3FFE_A0C6_67B5_DE56, 0x4B29_ADA8_B8CA_BBAC),
			new Quad(0x3FFE_A309_BEC4_A2D3, 0x358C_171F_770D_B1F4),
			new Quad(0x3FFE_A550_3B23_E255, 0xC8B4_2449_1CAF_88CC),
			new Quad(0x3FFE_A799_E133_0B35, 0x86F2_DFB2_B158_F31E),
			new Quad(0x3FFE_A9E6_B557_9FDB, 0xF43E_B243_BDFF_53A2),
			new Quad(0x3FFE_AC36_BBFD_3F37, 0x9C0D_B966_A312_6988),
			new Quad(0x3FFE_AE89_F995_AD3A, 0xD5E8_734D_1773_1C80),
			new Quad(0x3FFE_B0E0_7298_DB66, 0x5908_42AC_DFC6_FB4E),
			new Quad(0x3FFE_B33A_2B84_F15F, 0xAF6B_FD0E_7BD9_41B0),
			new Quad(0x3FFE_B597_28DE_5593, 0x98E3_8811_1164_8738),
			new Quad(0x3FFE_B7F7_6F2F_B5E4, 0x6EAA_7B08_1AB5_3FF6),
			new Quad(0x3FFE_BA5B_030A_1064, 0x9840_CB3C_6AF5_B74C),
			new Quad(0x3FFE_BCC1_E904_BC1D, 0x2247_BA0F_45B3_D06C),
			new Quad(0x3FFE_BF2C_25BD_71E0, 0x8840_8D70_2519_0CD0),
			new Quad(0x3FFE_C199_BDD8_5529, 0xC222_0CB1_2A09_16BA),
			new Quad(0x3FFE_C40A_B5FF_FD07, 0xA6D1_4DF8_20F1_7DEA),
			new Quad(0x3FFE_C67F_12E5_7D14, 0xB4A2_137F_D20F_2A26),
			new Quad(0x3FFE_C8F6_D940_6E7B, 0x511A_CBC4_8805_C3F6),
			new Quad(0x3FFE_CB72_0DCE_F906, 0x9150_3CBD_1E94_9D0A),
			new Quad(0x3FFE_CDF0_B555_DC3F, 0x9C44_F895_8FAC_4F12),
			new Quad(0x3FFE_D072_D4A0_7897, 0xB8D0_F22F_21A1_3792),
			new Quad(0x3FFE_D2F8_7080_D89F, 0x18AD_E123_989E_A50E),
			new Quad(0x3FFE_D581_8DCF_BA48, 0x725D_A05A_EB66_DFF8),
			new Quad(0x3FFE_D80E_316C_9839, 0x7BB8_4F9D_0488_07A0),
			new Quad(0x3FFE_DA9E_603D_B328, 0x5708_C01A_5B6D_480C),
			new Quad(0x3FFE_DD32_1F30_1B46, 0x04B6_95DE_3C06_30C0),
			new Quad(0x3FFE_DFC9_7337_B9B5, 0xEB96_8CAC_39ED_284C),
			new Quad(0x3FFE_E264_614F_5A12, 0x8A12_761F_A17A_DC74),
			new Quad(0x3FFE_E502_EE78_B3FF, 0x6273_D130_1539_92D0),
			new Quad(0x3FFE_E7A5_1FBC_74C8, 0x34B5_48B2_8323_78A4),
			new Quad(0x3FFE_EA4A_FA2A_490D, 0x9858_F73A_18F5_DAB4),
			new Quad(0x3FFE_ECF4_82D8_E67F, 0x08DB_0312_FB94_9D50),
			new Quad(0x3FFE_EFA1_BEE6_15A2, 0x7771_FD21_A92D_ABB6),
			new Quad(0x3FFE_F252_B376_BBA9, 0x74E8_696F_C363_8F24),
			new Quad(0x3FFE_F507_65B6_E454, 0x0674_F84B_7628_61A6),
			new Quad(0x3FFE_F7BF_DAD9_CBE1, 0x3891_3B4B_FE72_BD78),
			new Quad(0x3FFE_FA7C_1819_E90D, 0x82E9_0A7E_74B2_6360),
			new Quad(0x3FFE_FD3C_22B8_F71F, 0x1097_5BA4_B32B_D006),
			new Quad(0x3FFF_0000_0000_0000, 0x0000_0000_0000_0000),
			new Quad(0x3FFF_0163_DA9F_B333, 0x56D8_4A66_AE33_6E98),
			new Quad(0x3FFF_02C9_A3E7_7806, 0x0EE6_F7CA_CA4F_7A18),
			new Quad(0x3FFF_0431_5E86_E7F8, 0x4BD7_38F9_A20D_A442),
			new Quad(0x3FFF_059B_0D31_5857, 0x43AE_7C54_8EB6_8C6A),
			new Quad(0x3FFF_0706_B29D_DF6D, 0xDC6D_C403_A9D8_7B1E),
			new Quad(0x3FFF_0874_5187_59BC, 0x808C_35F2_5D94_2856),
			new Quad(0x3FFF_09E3_ECAC_6F38, 0x3452_1E06_0C58_4D5C),
			new Quad(0x3FFF_0B55_86CF_9890, 0xF629_8B92_B718_4200),
			new Quad(0x3FFF_0CC9_22B7_247F, 0x7407_B705_B893_DBDE),
			new Quad(0x3FFF_0E3E_C32D_3D1A, 0x2020_742E_4F8A_F794),
			new Quad(0x3FFF_0FB6_6AFF_ED31, 0xAF23_2091_DD8A_169E),
			new Quad(0x3FFF_1130_1D01_25B5, 0x0A4E_BBF1_AED9_321C),
			new Quad(0x3FFF_12AB_DC06_C31C, 0xBFB9_2BAD_324D_6F84),
			new Quad(0x3FFF_1429_AAEA_92DD, 0xFB34_1019_43B2_588E),
			new Quad(0x3FFF_15A9_8C8A_58E5, 0x1248_0D57_3DD5_62AE),
			new Quad(0x3FFF_172B_83C7_D517, 0xADCD_F7C8_C50E_B162),
			new Quad(0x3FFF_18AF_9388_C8DE, 0x9BBB_F70B_9A3C_269C),
			new Quad(0x3FFF_1A35_BEB6_FCB7, 0x53CB_698F_692D_2038),
			new Quad(0x3FFF_1BBE_0840_45CD, 0x39AB_1E72_B442_810E),
			new Quad(0x3FFF_1D48_7316_8B9A, 0xA780_5B80_2899_0BE8),
			new Quad(0x3FFF_1ED5_022F_CD91, 0xCB88_19FF_6112_1FBE),
			new Quad(0x3FFF_2063_B886_28CD, 0x63B8_EEB0_2950_93F6),
			new Quad(0x3FFF_21F4_9917_DDC9, 0x6255_2FD2_9294_BC20),
			new Quad(0x3FFF_2387_A6E7_5623, 0x866C_1FAD_B1C1_59C0),
			new Quad(0x3FFF_251C_E4FB_2A63, 0xF358_2AB7_DE9E_9562),
			new Quad(0x3FFF_26B4_565E_27CD, 0xD257_A673_281D_3068),
			new Quad(0x3FFF_284D_FE1F_5638, 0x096C_F15C_F03C_9FA0),
			new Quad(0x3FFF_29E9_DF51_FDEE, 0x12C2_5D15_F5A2_5022),
			new Quad(0x3FFF_2B87_FD0D_AD98, 0xFFDD_EA46_538F_CA24),
			new Quad(0x3FFF_2D28_5A6E_4030, 0xB400_91D5_36D0_733E),
			new Quad(0x3FFF_2ECA_FA93_E2F5, 0x611C_A0F4_5D52_39A4),
			new Quad(0x3FFF_306F_E0A3_1B71, 0x52DE_8D5A_4630_63BE),
			new Quad(0x3FFF_3217_0FC4_CD83, 0x1353_9CF1_C300_9330),
			new Quad(0x3FFF_33C0_8B26_416F, 0xF4C9_C861_0D96_680E),
			new Quad(0x3FFF_356C_55F9_29FF, 0x0C94_6234_7637_3BE4),
			new Quad(0x3FFF_371A_7373_AA9C, 0xAA71_4550_2F45_452A),
			new Quad(0x3FFF_38CA_E6D0_5D86, 0x585A_9CB0_D9BE_D530),
			new Quad(0x3FFF_3A7D_B34E_59FF, 0x6EA1_BC92_99E0_A1FE),
			new Quad(0x3FFF_3C32_DC31_3A8E, 0x4840_01F2_28B5_8CF0),
			new Quad(0x3FFF_3DEA_64C1_2342, 0x235B_4122_3E13_D7EE),
			new Quad(0x3FFF_3FA4_504A_C801, 0xBA0B_F701_AA41_7B9C),
			new Quad(0x3FFF_4160_A21F_72E2, 0x9F84_325B_8F3D_BACA),
			new Quad(0x3FFF_431F_5D95_0A89, 0x6DC7_0443_9410_B628),
			new Quad(0x3FFF_44E0_8606_1892, 0xD031_36F4_09DF_0724),
			new Quad(0x3FFF_46A4_1ED1_D005, 0x7725_12F4_5922_9F0A),
			new Quad(0x3FFF_486A_2B5C_13CD, 0x013C_1A3B_6906_2F26),
			new Quad(0x3FFF_4A32_AF0D_7D3D, 0xE672_D8BC_F46F_99B4),
			new Quad(0x3FFF_4BFD_AD53_62A2, 0x71D4_397A_FEC4_2E36),
			new Quad(0x3FFF_4DCB_299F_DDD0, 0xD63B_36EF_1A9E_19DE),
			new Quad(0x3FFF_4F9B_2769_D2CA, 0x6AD3_3D8B_69AA_0B8C),
			new Quad(0x3FFF_516D_AA2C_F664, 0x1C11_2F52_C84D_6066),
			new Quad(0x3FFF_5342_B569_D4F8, 0x1DF0_A83C_49D8_6BF4),
			new Quad(0x3FFF_551A_4CA5_D920, 0xEC52_EC62_0243_540C),
			new Quad(0x3FFF_56F4_736B_527D, 0xA66E_CB00_4764_E61E),
			new Quad(0x3FFF_58D1_2D49_7C7F, 0xD252_BC2B_7343_D554),
			new Quad(0x3FFF_5AB0_7DD4_8542, 0x958C_9301_5191_E9A8),
			new Quad(0x3FFF_5C92_68A5_946B, 0x701C_4B1B_8169_7ED4),
			new Quad(0x3FFF_5E76_F15A_D214, 0x86E9_BE4C_2039_9D12),
			new Quad(0x3FFF_605E_1B97_6DC0, 0x8B07_6F59_2A48_7066),
			new Quad(0x3FFF_6247_EB03_A558, 0x4B1F_0FA0_6FD2_D9EA),
			new Quad(0x3FFF_6434_634C_CC31, 0xFC76_F871_4C4E_E122),
			new Quad(0x3FFF_6623_8825_5222, 0x4912_7D9E_29B9_2EA2),
			new Quad(0x3FFF_6815_5D44_CA97, 0x3081_C572_27B9_F69E),
		};
		public static ReadOnlySpan<float> Eps => new float[TBLSIZE]
		{
			-5.36660379003503270454048253701289997311e-31f,
			-1.68037387647786328179134075490534908542e-32f,
			3.07041381383935075873449283496602037758e-31f,
			-1.30674346726673952629848103404387318563e-31f,
			2.18641196936560950218179895931953873837e-31f,
			-3.13926580935119444048124404641343152922e-32f,
			-7.28483001464471961418423656782748758237e-32f,
			3.61737791804532574100239057066013973604e-31f,
			-7.23475583609065148200478114132027947209e-31f,
			1.66785533183934624874647689827854705785e-31f,
			-2.59519060006180031199293027763318956173e-32f,
			1.39822513962513322931863998631665723326e-31f,
			-3.99630463460351439509115423086372418597e-32f,
			1.74104066972606121116260406009677429596e-31f,
			1.85322608898661769960311477525234631226e-31f,
			-8.64742545029868898022134096220632366024e-32f,
			-1.59129961654995362358750177506079619694e-31f,
			5.10371435262617501059834154785005739413e-33f,
			1.59852185384140575803646169234548967439e-32f,
			-1.95000406869207630121917766686723891002e-32f,
			3.47630354961896071476604018636579380996e-32f,
			-9.17705618500517883981173489641717867283e-31f,
			1.280261930531415033318961337333330435e-31f,
			2.12333776368692752799421568169988236869e-31f,
			-1.33803982886303210891064067561087825455e-31f,
			-1.09489117338414358246232346035953118059e-31f,
			3.66311875422452259251247004679653175986e-31f,
			3.09400645565809439793442856476268573723e-31f,
			4.58371326764162133027322750335212701812e-32f,
			6.25445749439754843279928836854455146695e-32f,
			3.13589543194851677773839608501390790641e-31f,
			1.50752166396910886397956673455835185859e-31f,
			-1.62981821543769834064862133391249474331e-31f,
			1.89944840765191136007645824587438456791e-31f,
			-2.54030159664676409018083490626951913315e-31f,
			-7.22223729145213444895991728469347744452e-34f,
			1.50463276905252801019998276764447446761e-31f,
			1.15266907171576065805400279863707900015e-31f,
			-5.24815909845521769957753989354392694302e-33f,
			1.6917368631497479733243710247666001566e-30f,
			-1.99405971616993432135783316230386912243e-31f,
			-1.8635779624376990923132906566937402966e-31f,
			-4.16482350473739753223355230083990532634e-32f,
			-1.19648397795057027371102629683088609664e-32f,
			-2.68426485998970997019676925747774245021e-32f,
			-1.05372442082286641610325193183677835916e-31f,
			-1.30599716941328947240542184259112152629e-30f,
			1.18757655195777930789064239884643080779e-31f,
			-3.46426648746654049068444032422463801422e-32f,
			6.38445776564368685288056687966903406095e-32f,
			-1.74441104712873887390545202149629791877e-31f,
			4.23704587765191887672315147368684010078e-33f,
			-3.07546937994336725284876477706530581179e-32f,
			7.77955326910919082393799090182899078732e-32f,
			3.38843299590629307897036119273535650105e-32f,
			8.84724068202886469997589867374950986953e-33f,
			-1.80074449800206552260733937631690704283e-32f,
			1.39569735657312498226150401526701451615e-32f,
			-1.51305871255922216705710267114328352463e-32f,
			-6.17742029662205899867704925084115437421e-32f,
			-3.93250820519568720745867496151559846854e-32f,
			-4.2039439567327632604987518527986616625e-33f,
			-1.37433157125257908451666425996646297871e-32f,
			2.84435778661689895048204742395511453357e-32f,
			0f,
			5.58293988956940518184703605934482251206e-32f,
			-4.87651480449924328105814414993574174952e-33f,
			-1.65208678041967575519958107887363296543e-32f,
			-1.57956348095134390510794190947316929609e-32f,
			-2.68426485998970997019676925747774245021e-33f,
			2.47000515367662998154429171136516928603e-32f,
			-4.13473084935634697202955264548701583699e-33f,
			-4.5102871885118579633754683442910766641e-32f,
			-3.40167376427395532546012104109062787637e-32f,
			6.28214273734811494818696805146920979716e-32f,
			1.65365159849949038433018906095198321888e-31f,
			3.7254707361740593532551573326877187818e-32f,
			4.39473139184862381219210966773598102499e-31f,
			8.49816587960867820160950267165599179305e-33f,
			9.47918644503092646425989143616018914593e-32f,
			5.99445695190527159263673134629558627895e-33f,
			1.02940955527497756345842021031164365176e-31f,
			2.39104202595675331156899661571918726597e-31f,
			1.82505936354995437525217109784204175023e-31f,
			-1.99381897492688591687620116506104600652e-31f,
			1.66568866065191060841178892309313901462e-31f,
			8.50779552933061438087478256136891642964e-32f,
			-9.92816886331620082250356629402530032706e-32f,
			-1.84841126412564960997047483039588399397e-31f,
			5.45760397990732959859737749480003778891e-32f,
			-6.63410643468488230033294802047660526462e-31f,
			-5.91741975412978215851449222859218918621e-32f,
			3.35761811679609730532146554565399766396e-31f,
			-3.52685921065912565590875960735864815207e-32f,
			-1.1957617542214250602661303051024167489e-31f,
			8.65224027515965706985398090706278597853e-32f,
			4.31793493531618278255150254727540704816e-31f,
			2.17774528461586694084304705857790656544e-31f,
			-8.08890576642639058283510735885669473786e-32f,
			5.5274189403913668982706566952187414042e-32f,
			-1.4232622289021672954083676995702612884e-31f,
			2.56437572095160453834403463055183072463e-31f,
			9.67779797054586016160628916148925977565e-33f,
			-1.31252125709990123385764896787162796758e-31f,
			2.73000569616890682170684873361413447403e-32f,
			-4.31649048785789235566171056381846835267e-31f,
			2.64333884867148120831932972619781274469e-31f,
			-1.28305452895077652530589250535007857961e-30f,
			3.09208052571370716208137258682010080991e-31f,
			8.06001681726058204503926768971792082808e-32f,
			7.41483028589085803426551507895197017637e-33f,
			2.30437517845932769818147760830286553663e-31f,
			4.52593536931000425468154816507457919856e-33f,
			7.14616305864883863276420615596137281544e-31f,
			2.33374561011123304494058127192728567824e-31f,
			-1.82038898343481532830851035133127330148e-30f,
			8.38742490780641214005878393995735847223e-32f,
			3.94863786847993030772801877678474723483e-31f,
			-2.71700566904429297969872088250168621463e-31f,
			1.28743601957425748687159485516945928926e-30f,
			-8.13223919017510338952886686256485560253e-32f,
			-4.07719369226777830091950530445229113335e-31f,
			2.9457098499402772372491182631836463337e-31f,
			1.11992826266117764855205117361313523573e-31f,
			-1.78148519855819316407677959689105776965e-32f,
			3.82826724695572806691202015537318927742e-31f,
			3.02789891031700252727828212188345810702e-30f,
			1.75211476690628781731767593326663762804e-31f,
		};

		public static ReadOnlySpan<(Quad hi, Quad lo)> Table => new (Quad, Quad)[]
		{
			(Quad.One, Quad.Zero),
			(new Quad(0x3FFF_0163_DA9F_B333, 0x56D8_4A66_AE00_0000), new Quad(0x3FA4_9B6E_6FD2_001F, 0x6026_1B05_F120_203C)),
			(new Quad(0x3FFF_02C9_A3E7_7806, 0x0EE6_F7CA_CA00_0000), new Quad(0x3FA5_3DE8_A6F7_A4F5, 0xC28B_2AF1_72E2_6E84)),
			(new Quad(0x3FFF_0431_5E86_E7F8, 0x4BD7_38F9_A200_0000), new Quad(0x3FA2_B48F_CDDA_0817, 0x697F_80B5_EC8A_BD37)),
			(new Quad(0x3FFF_059B_0D31_5857, 0x43AE_7C54_8E00_0000), new Quad(0x3FA6_6D19_482F_FCA7, 0xC692_BEFB_E975_F094)),
			(new Quad(0x3FFF_0706_B29D_DF6D, 0xDC6D_C403_A800_0000), new Quad(0x3FA7_D87B_27ED_07CB, 0x8B09_2AC7_5E31_1753)),
			(new Quad(0x3FFF_0874_5187_59BC, 0x808C_35F2_5C00_0000), new Quad(0x3FA7_9427_FA2B_041B, 0x2D68_29D8_993A_0D01)),
			(new Quad(0x3FFF_09E3_ECAC_6F38, 0x3452_1E06_0C00_0000), new Quad(0x3FA5_6135_ADD2_E8B8, 0x08F6_9CC3_9FF3_2DD6)),
			(new Quad(0x3FFF_0B55_86CF_9890, 0xF629_8B92_B600_0000), new Quad(0x3FA7_1842_A983_6429, 0x1408_B3CE_B0A2_A2BB)),
			(new Quad(0x3FFF_0CC9_22B7_247F, 0x7407_B705_B800_0000), new Quad(0x3FA6_27B8_BD15_58AC, 0x9CDF_C5DE_3A86_3FB3)),
			(new Quad(0x3FFF_0E3E_C32D_3D1A, 0x2020_742E_4E00_0000), new Quad(0x3FA7_8AF6_A552_AC4B, 0x358B_1129_E9F9_66A4)),
			(new Quad(0x3FFF_0FB6_6AFF_ED31, 0xAF23_2091_DC00_0000), new Quad(0x3FA7_8A14_2651_4E0B, 0x627B_DA69_4A40_0A27)),
			(new Quad(0x3FFF_1130_1D01_25B5, 0x0A4E_BBF1_AE00_0000), new Quad(0x3FA6_B263_19D5_8B98, 0x8F56_2CDD_CAE8_4E2F)),
			(new Quad(0x3FFF_12AB_DC06_C31C, 0xBFB9_2BAD_3200_0000), new Quad(0x3FA5_35A3_8BDC_9C2F, 0x7DF3_B7E5_3AC7_2E06)),
			(new Quad(0x3FFF_1429_AAEA_92DD, 0xFB34_1019_4200_0000), new Quad(0x3FA7_B258_6D01_844B, 0x389B_EA7A_EDD2_21D4)),
			(new Quad(0x3FFF_15A9_8C8A_58E5, 0x1248_0D57_3C00_0000), new Quad(0x3FA7_D561_3BF9_2A2B, 0x618E_E31B_376C_2689)),
			(new Quad(0x3FFF_172B_83C7_D517, 0xADCD_F7C8_C400_0000), new Quad(0x3FA7_0EB1_4A79_2035, 0x509F_F7D7_5869_3F24)),
			(new Quad(0x3FFF_18AF_9388_C8DE, 0x9BBB_F70B_9A00_0000), new Quad(0x3FA4_E128_2E4B_E008, 0x172F_8908_CA0E_9420)),
			(new Quad(0x3FFF_1A35_BEB6_FCB7, 0x53CB_698F_6800_0000), new Quad(0x3FA7_2D1C_835A_6C30, 0x724D_5CFA_E31B_84E5)),
			(new Quad(0x3FFF_1BBE_0840_45CD, 0x39AB_1E72_B400_0000), new Quad(0x3FA5_09F8_D7E6_B2D5, 0xF91C_E455_4668_6D12)),
			(new Quad(0x3FFF_1D48_7316_8B9A, 0xA780_5B80_2800_0000), new Quad(0x3FA6_321E_0F53_1684, 0x40DC_8C2C_D9E0_A3AE)),
			(new Quad(0x3FFF_1ED5_022F_CD91, 0xCB88_19FF_6000_0000), new Quad(0x3FA7_121D_1E50_4D36, 0xC474_74C9_B7DE_6067)),
			(new Quad(0x3FFF_2063_B886_28CD, 0x63B8_EEB0_2800_0000), new Quad(0x3FA7_5092_9D0F_C487, 0xD21C_2B84_0042_64DE)),
			(new Quad(0x3FFF_21F4_9917_DDC9, 0x6255_2FD2_9200_0000), new Quad(0x3FA6_297B_696C_3D4C, 0x48EF_9543_B9D0_4774)),
			(new Quad(0x3FFF_2387_A6E7_5623, 0x866C_1FAD_B000_0000), new Quad(0x3FA7_C15C_B593_B032, 0x8566_902D_F69E_4DE2)),
			(new Quad(0x3FFF_251C_E4FB_2A63, 0xF358_2AB7_DE00_0000), new Quad(0x3FA6_3D29_0235_3915, 0xFB9E_F2D2_6978_CA5A)),
			(new Quad(0x3FFF_26B4_565E_27CD, 0xD257_A673_2800_0000), new Quad(0x3FA3_D3B2_49DC_E4E9, 0x186D_DD5F_F44E_6B08)),
			(new Quad(0x3FFF_284D_FE1F_5638, 0x096C_F15C_F000_0000), new Quad(0x3FA4_E504_B3FE_D517, 0x296B_E408_3797_1316)),
			(new Quad(0x3FFF_29E9_DF51_FDEE, 0x12C2_5D15_F400_0000), new Quad(0x3FA7_A24A_A3BC_A890, 0xAC08_D203_FED8_0A07)),
			(new Quad(0x3FFF_2B87_FD0D_AD98, 0xFFDD_EA46_5200_0000), new Quad(0x3FA7_8FCA_B884_42FD, 0xC3CB_6DE4_5191_65ED)),
			(new Quad(0x3FFF_2D28_5A6E_4030, 0xB400_91D5_3600_0000), new Quad(0x3FA6_A0EA_708B_1383, 0x9A36_7C80_314D_6269)),
			(new Quad(0x3FFF_2ECA_FA93_E2F5, 0x611C_A0F4_5C00_0000), new Quad(0x3FA7_5238_33AF_611B, 0xDCDA_253C_554C_F278)),
			(new Quad(0x3FFF_306F_E0A3_1B71, 0x52DE_8D5A_4600_0000), new Quad(0x3FA4_82E4_2F6F_65E1, 0x39A1_B14F_A817_8D79)),
			(new Quad(0x3FFF_3217_0FC4_CD83, 0x1353_9CF1_C200_0000), new Quad(0x3FA7_008F_86DD_E322, 0x0AE1_7A00_5B64_12BE)),
			(new Quad(0x3FFF_33C0_8B26_416F, 0xF4C9_C861_0C00_0000), new Quad(0x3FA7_9669_6BF9_5D15, 0x9303_9539_D94D_662B)),
			(new Quad(0x3FFF_356C_55F9_29FF, 0x0C94_6234_7600_0000), new Quad(0x3FA4_B9D7_9C6B_6C6B, 0x7CA8_364D_DE49_E5E0)),
			(new Quad(0x3FFF_371A_7373_AA9C, 0xAA71_4550_2E00_0000), new Quad(0x3FA7_4547_987E_3E12, 0x516B_F9C6_99BE_432F)),
			(new Quad(0x3FFF_38CA_E6D0_5D86, 0x585A_9CB0_D800_0000), new Quad(0x3FA7_BED0_C853_BD30, 0xA027_9093_1EB2_E8F0)),
			(new Quad(0x3FFF_3A7D_B34E_59FF, 0x6EA1_BC92_9800_0000), new Quad(0x3FA7_E0A1_D336_163F, 0xE2F8_52CE_EB13_4067)),
			(new Quad(0x3FFF_3C32_DC31_3A8E, 0x4840_01F2_2800_0000), new Quad(0x3FA6_6B1E_6EEB_C0D5, 0x6CC6_A600_3F5D_3F94)),
			(new Quad(0x3FFF_3DEA_64C1_2342, 0x235B_4122_3E00_0000), new Quad(0x3FA3_3D77_3FBA_2CB8, 0x2B82_4426_7C54_443F)),
			(new Quad(0x3FFF_3FA4_504A_C801, 0xBA0B_F701_AA00_0000), new Quad(0x3FA5_060C_BEE3_0723, 0x6F7F_CB12_6427_9B18)),
			(new Quad(0x3FFF_4160_A21F_72E2, 0x9F84_325B_8E00_0000), new Quad(0x3FA7_3DB6_1FB3_52F0, 0x540E_6BA0_5634_413E)),
			(new Quad(0x3FFF_431F_5D95_0A89, 0x6DC7_0443_9400_0000), new Quad(0x3FA3_0CCE_C81E_24B0, 0xCAFF_7581_EF41_27F7)),
			(new Quad(0x3FFF_44E0_8606_1892, 0xD031_36F4_0800_0000), new Quad(0x3FA7_DF01_9FBD_4F3B, 0x4870_9B78_591D_5CB5)),
			(new Quad(0x3FFF_46A4_1ED1_D005, 0x7725_12F4_5800_0000), new Quad(0x3FA7_229D_97DF_404F, 0xF21F_39C1_B594_D3A8)),
			(new Quad(0x3FFF_486A_2B5C_13CD, 0x013C_1A3B_6800_0000), new Quad(0x3FA7_062F_03C3_DD75, 0xCE87_57F7_80E6_EC99)),
			(new Quad(0x3FFF_4A32_AF0D_7D3D, 0xE672_D8BC_F400_0000), new Quad(0x3FA5_BE56_1918_76C7, 0x61E2_C745_22F4_F32E)),
			(new Quad(0x3FFF_4BFD_AD53_62A2, 0x71D4_397A_FE00_0000), new Quad(0x3FA6_885C_41C0_6C77, 0x45C2_B38A_F3F0_5C96)),
			(new Quad(0x3FFF_4DCB_299F_DDD0, 0xD63B_36EF_1A00_0000), new Quad(0x3FA6_3C19_8909_64B4, 0xAACD_A17A_BEB1_5A47)),
			(new Quad(0x3FFF_4F9B_2769_D2CA, 0x6AD3_3D8B_6800_0000), new Quad(0x3FA7_AA07_3EE5_5E02, 0x8497_A329_A733_3DBA)),
			(new Quad(0x3FFF_516D_AA2C_F664, 0x1C11_2F52_C800_0000), new Quad(0x3FA5_3608_8643_9C60, 0x8985_DF5D_8234_800E)),
			(new Quad(0x3FFF_5342_B569_D4F8, 0x1DF0_A83C_4800_0000), new Quad(0x3FA7_D86A_63F4_E672, 0xA3E4_2980_5B04_9465)),
			(new Quad(0x3FFF_551A_4CA5_D920, 0xEC52_EC62_0200_0000), new Quad(0x3FA5_0D32_99C9_9177, 0x1B04_9359_866A_1D5D)),
			(new Quad(0x3FFF_56F4_736B_527D, 0xA66E_CB00_4600_0000), new Quad(0x3FA7_64EB_3C00_F2F5, 0xAB3D_801D_7CC7_272D)),
			(new Quad(0x3FFF_58D1_2D49_7C7F, 0xD252_BC2B_7200_0000), new Quad(0x3FA7_43BC_F2EC_936A, 0x970D_9CC2_66F0_072F)),
			(new Quad(0x3FFF_5AB0_7DD4_8542, 0x958C_9301_5000_0000), new Quad(0x3FA7_91EB_345D_88D7, 0xC812_80E0_69FB_DB63)),
			(new Quad(0x3FFF_5C92_68A5_946B, 0x701C_4B1B_8000_0000), new Quad(0x3FA7_6986_A203_D84E, 0x6A4A_92F1_79E7_1889)),
			(new Quad(0x3FFF_5E76_F15A_D214, 0x86E9_BE4C_2000_0000), new Quad(0x3FA4_CCBB_3503_2A45, 0x02C1_4F42_9DED_95A9)),
			(new Quad(0x3FFF_605E_1B97_6DC0, 0x8B07_6F59_2A00_0000), new Quad(0x3FA5_21B8_ECD3_AB46, 0xD1DA_77E1_9EE7_2273)),
			(new Quad(0x3FFF_6247_EB03_A558, 0x4B1F_0FA0_6E00_0000), new Quad(0x3FA7_D2DA_42BB_1CEA, 0xF9F7_3227_5B8A_EF30)),
			(new Quad(0x3FFF_6434_634C_CC31, 0xFC76_F871_4C00_0000), new Quad(0x3FA5_3B66_9390_4000, 0xC1C4_0E86_33DE_9B82)),
			(new Quad(0x3FFF_6623_8825_5222, 0x4912_7D9E_2800_0000), new Quad(0x3FA7_B8F3_14A3_37F4, 0xDC0A_3ADF_1787_FF74)),
			(new Quad(0x3FFF_6815_5D44_CA97, 0x3081_C572_2600_0000), new Quad(0x3FA7_B9F3_2706_BFE4, 0xE627_D809_A85D_CC66)),
			(new Quad(0x3FFF_6A09_E667_F3BC, 0xC908_B2FB_1200_0000), new Quad(0x3FA7_66EA_957D_3E3A, 0xDEC1_7512_7750_99DA)),
			(new Quad(0x3FFF_6C01_2750_BDAB, 0xEED7_6A99_8000_0000), new Quad(0x3FA2_E9E6_7FBD_7161, 0xD9B0_6220_DEAF_67A0)),
			(new Quad(0x3FFF_6DFB_23C6_51A2, 0xEF22_0E2C_BE00_0000), new Quad(0x3FA3_BBAA_834B_3F11, 0x577C_EEFB_E6C1_C411)),
			(new Quad(0x3FFF_6FF7_DF95_1948, 0x3CF8_7E1B_4E00_0000), new Quad(0x3FA7_3E21_3BFF_9B70, 0x2D5A_A477_C125_23CE)),
			(new Quad(0x3FFF_71F7_5E8E_C5F7, 0x3DD2_370F_2E00_0000), new Quad(0x3FA6_E159_AD96_8696, 0xAC5B_3D14_415B_B4C9)),
			(new Quad(0x3FFF_73F9_A48A_5817, 0x3BD5_C9A4_E600_0000), new Quad(0x3FA6_1562_3055_C42F, 0xE74E_D02E_B2AA_7D08)),
			(new Quad(0x3FFF_75FE_B564_267C, 0x8BF6_E9AA_3200_0000), new Quad(0x3FA7_A48B_2707_1805, 0xE61A_17B9_54A2_DAD8)),
			(new Quad(0x3FFF_7806_94FD_E5D3, 0xF619_AE02_8000_0000), new Quad(0x3FA6_0B16_5765_7B9F, 0x0D9A_11C6_BF60_981E)),
			(new Quad(0x3FFF_7A11_473E_B018, 0x6D7D_5102_3E00_0000), new Quad(0x3FA7_6CDA_1F5E_F42B, 0x6697_7960_531E_821B)),
			(new Quad(0x3FFF_7C1E_D013_0C13, 0x27C4_9334_4400_0000), new Quad(0x3FA7_9375_62B2_DC93, 0x3D44_FC82_8EFD_4C9C)),
			(new Quad(0x3FFF_7E2F_336C_F4E6, 0x2105_D02B_A000_0000), new Quad(0x3FA7_5797_E170_A142, 0x7F8F_CDF5_F390_6108)),
			(new Quad(0x3FFF_8042_7543_E1A1, 0x1B60_DE67_6400_0000), new Quad(0x3FA6_346A_9D4E_0D71, 0xC9B1_6E31_4CE5_7EF9)),
			(new Quad(0x3FFF_8258_9994_CCE1, 0x28AC_F88A_FA00_0000), new Quad(0x3FA6_6694_021E_D5AC, 0xB977_581E_A65A_737C)),
			(new Quad(0x3FFF_8471_A462_3C7A, 0xCCE5_2F6B_9600_0000), new Quad(0x3FA7_C640_9537_0F51, 0xF488_1791_4DD7_8665)),
			(new Quad(0x3FFF_868D_99B4_492E, 0xC80E_41D9_0A00_0000), new Quad(0x3FA6_84A2_E0E9_09AE, 0x7E26_DF6A_EF2C_AD6E)),
			(new Quad(0x3FFF_88AC_7D98_A669, 0x9665_30BC_DE00_0000), new Quad(0x3FA7_2D4E_9D61_283E, 0xF385_DE17_0AB2_0F96)),
			(new Quad(0x3FFF_8ACE_5422_AA0D, 0xB5BA_7C55_A000_0000), new Quad(0x3FA7_92C9_BB3E_6ED6, 0x1F27_3330_4A34_6D8F)),
			(new Quad(0x3FFF_8CF3_216B_5448, 0xBEF2_AA1C_D000_0000), new Quad(0x3FA7_61C5_5D84_A984, 0x8F8C_453B_3CA8_C946)),
			(new Quad(0x3FFF_8F1A_E991_5773, 0x62B9_8274_5C00_0000), new Quad(0x3FA5_CBB6_013B_F26D, 0x2B85_162B_A518_2675)),
			(new Quad(0x3FFF_9145_B0B9_1FFC, 0x588A_61B4_6800_0000), new Quad(0x3FA7_F6B7_0E01_C2A9, 0x0229_A4C4_309E_A719)),
			(new Quad(0x3FFF_9373_7B0C_DC5E, 0x4F45_01C3_F200_0000), new Quad(0x3FA5_5028_8B4B_F12B, 0xD606_D8FA_0C9B_BFA7)),
			(new Quad(0x3FFF_95A4_4CBC_8520, 0xEE9B_4836_9400_0000), new Quad(0x3FA7_A0FC_6F7C_7D61, 0xB2B3_A22A_0EAB_2CAD)),
			(new Quad(0x3FFF_97D8_29FD_E4E4, 0xF8B9_E920_F800_0000), new Quad(0x3FA7_1E8B_D7ED_B9D7, 0x144B_6F68_1808_4CC7)),
			(new Quad(0x3FFF_9A0F_170C_A07B, 0x9BA3_109B_8C00_0000), new Quad(0x3FA5_19CD_EFAC_6787, 0xAB69_A097_4F15_5D0A)),
			(new Quad(0x3FFF_9C49_182A_3F09, 0x01C7_C46B_0600_0000), new Quad(0x3FA7_1F2B_E58D_DADE, 0x50C2_1718_6C90_B457)),
			(new Quad(0x3FFF_9E86_319E_3232, 0x3182_4CA7_8E00_0000), new Quad(0x3FA5_931B_8043_E4B0, 0x20AE_EB7E_BD81_73F5)),
			(new Quad(0x3FFF_A0C6_67B5_DE56, 0x4B29_ADA8_B800_0000), new Quad(0x3FA6_9566_9354_0845, 0x51B4_FA8A_25DB_58A9)),
			(new Quad(0x3FFF_A309_BEC4_A2D3, 0x358C_171F_7600_0000), new Quad(0x3FA7_0DAA_D547_FA22, 0xC26D_168E_A762_D854)),
			(new Quad(0x3FFF_A550_3B23_E255, 0xC8B4_2449_1C00_0000), new Quad(0x3FA6_5F0F_7900_A148, 0x0A70_2E07_DEF9_5FEA)),
			(new Quad(0x3FFF_A799_E133_0B35, 0x86F2_DFB2_B000_0000), new Quad(0x3FA7_58F1_A987_96CE, 0x8908_AE85_2236_CA94)),
			(new Quad(0x3FFF_A9E6_B557_9FDB, 0xF43E_B243_BC00_0000), new Quad(0x3FA7_FF4C_4C58_B571, 0xCF46_5CAF_07B4_B9F5)),
			(new Quad(0x3FFF_AC36_BBFD_3F37, 0x9C0D_B966_A200_0000), new Quad(0x3FA7_1265_FC73_E480, 0x712D_20F8_597A_8E7B)),
			(new Quad(0x3FFF_AE89_F995_AD3A, 0xD5E8_734D_1600_0000), new Quad(0x3FA7_7320_5A7F_BC3A, 0xE675_EA44_0B16_2D6C)),
			(new Quad(0x3FFF_B0E0_7298_DB66, 0x5908_42AC_DE00_0000), new Quad(0x3FA7_C6F6_CA0E_5DCA, 0xE2AA_FFFA_7A05_54CB)),
			(new Quad(0x3FFF_B33A_2B84_F15F, 0xAF6B_FD0E_7A00_0000), new Quad(0x3FA7_D947_C257_5781, 0xDBB4_9B12_37C8_7B6E)),
			(new Quad(0x3FFF_B597_28DE_5593, 0x98E3_8811_1000_0000), new Quad(0x3FA7_6487_3C71_71FE, 0xFC41_0416_BE0A_6525)),
			(new Quad(0x3FFF_B7F7_6F2F_B5E4, 0x6EAA_7B08_1A00_0000), new Quad(0x3FA6_6A78_A6A9_9120, 0x786A_DC96_C4B5_5985)),
			(new Quad(0x3FFF_BA5B_030A_1064, 0x9840_CB3C_6A00_0000), new Quad(0x3FA6_EB68_FE52_E406, 0xEAFC_398D_D5B9_175A)),
			(new Quad(0x3FFF_BCC1_E904_BC1D, 0x2247_BA0F_4400_0000), new Quad(0x3FA7_B3D0_8CD0_B202, 0x8709_2BD5_9BE4_AD98)),
			(new Quad(0x3FFF_BF2C_25BD_71E0, 0x8840_8D70_2400_0000), new Quad(0x3FA7_18E3_449F_A073, 0xB356_766D_FB56_8FF4)),
			(new Quad(0x3FFF_C199_BDD8_5529, 0xC222_0CB1_2A00_0000), new Quad(0x3FA2_2374_CCF2_8892, 0xC946_CCC2_4800_872E)),
			(new Quad(0x3FFF_C40A_B5FF_FD07, 0xA6D1_4DF8_2000_0000), new Quad(0x3FA6_E305_14A6_CDFA, 0x70F4_F7BA_A99B_EE60)),
			(new Quad(0x3FFF_C67F_12E5_7D14, 0xB4A2_137F_D200_0000), new Quad(0x3FA2_E566_03BB_3CD6, 0x2A34_DA3F_3ABA_BEA4)),
			(new Quad(0x3FFF_C8F6_D940_6E7B, 0x511A_CBC4_8800_0000), new Quad(0x3FA1_7110_B76D_5608, 0x05C7_CC67_6794_1DAA)),
			(new Quad(0x3FFF_CB72_0DCE_F906, 0x9150_3CBD_1E00_0000), new Quad(0x3FA6_293B_6EC3_B2AB, 0x3581_96DB_A7DA_B33C)),
			(new Quad(0x3FFF_CDF0_B555_DC3F, 0x9C44_F895_8E00_0000), new Quad(0x3FA7_AC51_BE51_5F8C, 0x58BD_FB6F_5740_A3A4)),
			(new Quad(0x3FFF_D072_D4A0_7897, 0xB8D0_F22F_2000_0000), new Quad(0x3FA7_A158_E18F_BBFC, 0x625F_09F4_CCA4_0874)),
			(new Quad(0x3FFF_D2F8_7080_D89F, 0x18AD_E123_9800_0000), new Quad(0x3FA6_3D44_04B6_98AC, 0xAA7E_B9BD_C992_48E5)),
			(new Quad(0x3FFF_D581_8DCF_BA48, 0x725D_A05A_EA00_0000), new Quad(0x3FA7_66E0_DCA9_F589, 0xF559_C087_6FF2_3830)),
			(new Quad(0x3FFF_D80E_316C_9839, 0x7BB8_4F9D_0400_0000), new Quad(0x3FA6_100B_F097_D8C2, 0x9BC4_D320_1BBF_31A5)),
			(new Quad(0x3FFF_DA9E_603D_B328, 0x5708_C01A_5A00_0000), new Quad(0x3FA7_6D4C_97F6_246F, 0x0EC6_14EC_95C9_9392)),
			(new Quad(0x3FFF_DD32_1F30_1B46, 0x04B6_95DE_3C00_0000), new Quad(0x3FA1_8C28_E4C8_54A6, 0x78C3_53ED_CD40_F0D2)),
			(new Quad(0x3FFF_DFC9_7337_B9B5, 0xEB96_8CAC_3800_0000), new Quad(0x3FA7_ED29_1B72_25A9, 0x44EF_D5BB_5524_B927)),
			(new Quad(0x3FFF_E264_614F_5A12, 0x8A12_761F_A000_0000), new Quad(0x3FA7_7ADA_6467_E77F, 0x73BF_65E0_4C95_E29D)),
			(new Quad(0x3FFF_E502_EE78_B3FF, 0x6273_D130_1400_0000), new Quad(0x3FA7_3991_E8F4_9659, 0xE169_3BE1_7AE1_D2F9)),
			(new Quad(0x3FFF_E7A5_1FBC_74C8, 0x34B5_48B2_8200_0000), new Quad(0x3FA7_2378_6758_A84F, 0x4956_3546_34A4_16CE)),
			(new Quad(0x3FFF_EA4A_FA2A_490D, 0x9858_F73A_1800_0000), new Quad(0x3FA6_EBB6_603F_0DBD, 0x440C_219D_DC27_D6F7)),
			(new Quad(0x3FFF_ECF4_82D8_E67F, 0x08DB_0312_FA00_0000), new Quad(0x3FA7_949C_EF46_2010, 0xBB4B_C4CE_72A9_00DF)),
			(new Quad(0x3FFF_EFA1_BEE6_15A2, 0x7771_FD21_A800_0000), new Quad(0x3FA7_2DAC_1F6D_D5D2, 0x29FF_68E4_6F27_E3DF)),
			(new Quad(0x3FFF_F252_B376_BBA9, 0x74E8_696F_C200_0000), new Quad(0x3FA7_6390_D4C6_AD54, 0x76B5_162F_40E1_D9A9)),
			(new Quad(0x3FFF_F507_65B6_E454, 0x0674_F84B_7600_0000), new Quad(0x3FA4_4315_D7FC_C800, 0x6FE2_1A95_D14D_C484)),
			(new Quad(0x3FFF_F7BF_DAD9_CBE1, 0x3891_3B4B_FE00_0000), new Quad(0x3FA5_CAF6_5717_39CA, 0x03E9_348D_128F_D586)),
			(new Quad(0x3FFF_FA7C_1819_E90D, 0x82E9_0A7E_7400_0000), new Quad(0x3FA6_64C7_83B8_0C18, 0x6DEE_CA16_981E_4675)),
			(new Quad(0x3FFF_FD3C_22B8_F71F, 0x1097_5BA4_B200_0000), new Quad(0x3FA7_2BCF_3A5E_12D2, 0x69D8_AD7C_1A4A_8875)),
		};


		public const double T1 = -0.1659;
		public const double T2 = 0.1659;
		public const double T3 = 0.03125;

		public static Quad C3 => new Quad(0x3FFC_5555_5555_5555, 0x5555_5555_5555_5555);
		public static Quad C4 => new Quad(0x3FFA_5555_5555_5555, 0x5555_5555_5555_5555);
		public static Quad C5 => new Quad(0x3FF8_1111_1111_1111, 0x1111_1111_1111_1210);
		public static Quad C6 => new Quad(0x3FF5_6C16_C16C_16C1, 0x6C16_C16C_16C3_49BB);
		public static Quad C7 => new Quad(0x3FF2_A01A_01A0_1A01, 0xA01A_01A0_1705_DF4D);
		public static Quad C8 => new Quad(0x3FEF_A01A_01A0_1A01, 0xA01A_019A_1378_E5FF);
		public static Quad C9 => new Quad(0x3FEC_71DE_3A55_6C73, 0x38FA_ACF0_D2CA_7A76);
		public static Quad C10 => new Quad(0x3FE9_27E4_FB77_89F5, 0xC735_B315_7B02_281A);
		public static Quad C11 => new Quad(0x3FE5_AE64_567F_544E, 0x40AA_E1AD_408F_F6F6);
		public static Quad C12 => new Quad(0x3FE2_1EED_8EFF_8D87, 0x5892_66C9_2620_C7F8);
		public static Quad C13 => new Quad(0x3FDE_6124_613A_7DB6, 0x9258_5198_970E_8AB2);

		public const double C14 = 1.1470745580491932e-11;
		public const double C15 = 7.6471620181090468e-13;
		public const double C16 = 4.7793721460260450e-14;
		public const double C17 = 2.8074757356658877e-15;
		public const double C18 = 1.4760610323699476e-16;

		public static Quad D3 => new Quad(0x3FFC_5555_5555_5555, 0x5555_5555_5555_57DC);
		public static Quad D4 => new Quad(0x3FFA_5555_5555_5555, 0x5555_5555_554D_1BF7);
		public static Quad D5 => new Quad(0x3FF8_1111_1111_1111, 0x1111_1111_1D39_4AC0);
		public static Quad D6 => new Quad(0x3FF5_6C16_C16C_16C1, 0x6C16_C156_6C41_F8CD);
		public static Quad D7 => new Quad(0x3FF2_A01A_01A0_1A01, 0xA01A_1BAA_3B05_95A8);
		public static Quad D8 => new Quad(0x3FEF_A01A_01A0_1A01, 0xA003_A377_84AA_1CC4);
		public static Quad D9 => new Quad(0x3FEC_71DE_3A55_6C73, 0x472C_BF84_45DA_065C);
		public static Quad D10 => new Quad(0x3FE9_27E4_FB77_89EE, 0xFEBF_E259_FF3A_096A);
		public static Quad D11 => new Quad(0x3FE5_AE64_567F_593A, 0xDF45_05DB_A46C_FCDD);
		public static Quad D12 => new Quad(0x3FE2_1EED_8EFE_319A, 0x2583_3D8F_7F44_69B4);
		public static Quad D13 => new Quad(0x3FDE_6124_61CB_7935, 0x9D69_C3EC_6E4A_DF76);

		public const double D14 = 1.1470726176204336e-11;
		public const double D15 = 7.6478532249581686e-13;
		public const double D16 = 4.7628892832607741e-14;
		public const double D17 = 3.0524857220358650e-15;
	}
	public static class RemPio
	{
		public const double TWO24 = 1.67772160000000000000e+07;
		public const double TWON24 = 5.96046447753906250000e-08;

		/// <summary>
		/// First 68 bits of pi/2
		/// </summary>
		public static Quad PIO2_1 => new Quad(0x3FFF_921F_B544_42D1, 0x8469_8000_0000_0000);
		/// <summary>
		/// pi/2 - pio2_1
		/// </summary>
		public static Quad PIO2_1T => new Quad(0x3FBA_3198_A2E0_3707, 0x344A_4093_8222_99F3);
		/// <summary>
		/// Second 68 bits of pi/2
		/// </summary>
		public static Quad PIO2_2 => new Quad(0x3FBA_3198_A2E0_3707, 0x344A_4000_0000_0000);
		/// <summary>
		/// pi/2 - (pio2_1+pio2_2)
		/// </summary>
		public static Quad PIO2_2T => new Quad(0x3F71_2704_4533_E63A, 0x0105_DF53_1D89_CD91);
		/// <summary>
		/// Third 68 bits of pi/2
		/// </summary>
		public static Quad PIO2_3 => new Quad(0x3F71_2704_4533_E63A, 0x0105_E000_0000_0000);
		/// <summary>
		/// pi/2 - (pio2_1+pio2_2+pio2_3)
		/// </summary>
		public static Quad PIO2_3T => new Quad(0xBF28_59C4_EC64_DDAE, 0xB5F7_8671_CBFB_2210);

		public static ReadOnlySpan<int> INIT_JK =>
		[
			3, 4, 4, 6
		];
		public static ReadOnlySpan<int> IPIO2 =>
		[
			0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,
			0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,
			0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,
			0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,
			0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,
			0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,
			0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,
			0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,
			0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,
			0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,
			0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B,
			0x47C419, 0xC367CD, 0xDCE809, 0x2A8359, 0xC4768B, 0x961CA6,
			0xDDAF44, 0xD15719, 0x053EA5, 0xFF0705, 0x3F7E33, 0xE832C2,
			0xDE4F98, 0x327DBB, 0xC33D26, 0xEF6B1E, 0x5EF89F, 0x3A1F35,
			0xCAF27F, 0x1D87F1, 0x21907C, 0x7C246A, 0xFA6ED5, 0x772D30,
			0x433B15, 0xC614B5, 0x9D19C3, 0xC2C4AD, 0x414D2C, 0x5D000C,
			0x467D86, 0x2D71E3, 0x9AC69B, 0x006233, 0x7CD2B4, 0x97A7B4,
			0xD55537, 0xF63ED7, 0x1810A3, 0xFC764D, 0x2A9D64, 0xABD770,
			0xF87C63, 0x57B07A, 0xE71517, 0x5649C0, 0xD9D63B, 0x3884A7,
			0xCB2324, 0x778AD6, 0x23545A, 0xB91F00, 0x1B0AF1, 0xDFCE19,
			0xFF319F, 0x6A1E66, 0x615799, 0x47FBAC, 0xD87F7E, 0xB76522,
			0x89E832, 0x60BFE6, 0xCDC4EF, 0x09366C, 0xD43F5D, 0xD7DE16,
			0xDE3B58, 0x929BDE, 0x2822D2, 0xE88628, 0x4D58E2, 0x32CAC6,
			0x16E308, 0xCB7DE0, 0x50C017, 0xA71DF3, 0x5BE018, 0x34132E,
			0x621283, 0x014883, 0x5B8EF5, 0x7FB0AD, 0xF2E91E, 0x434A48,
			0xD36710, 0xD8DDAA, 0x425FAE, 0xCE616A, 0xA4280A, 0xB499D3,
			0xF2A606, 0x7F775C, 0x83C2A3, 0x883C61, 0x78738A, 0x5A8CAF,
			0xBDD76F, 0x63A62D, 0xCBBFF4, 0xEF818D, 0x67C126, 0x45CA55,
			0x36D9CA, 0xD2A828, 0x8D61C2, 0x77C912, 0x142604, 0x9B4612,
			0xC459C4, 0x44C5C8, 0x91B24D, 0xF31700, 0xAD43D4, 0xE54929,
			0x10D5FD, 0xFCBE00, 0xCC941E, 0xEECE70, 0xF53E13, 0x80F1EC,
			0xC3E7B3, 0x28F8C7, 0x940593, 0x3E71C1, 0xB3092E, 0xF3450B,
			0x9C1288, 0x7B20AB, 0x9FB52E, 0xC29247, 0x2F327B, 0x6D550C,
			0x90A772, 0x1FE76B, 0x96CB31, 0x4A1679, 0xE27941, 0x89DFF4,
			0x9794E8, 0x84E6E2, 0x973199, 0x6BED88, 0x365F5F, 0x0EFDBB,
			0xB49A48, 0x6CA467, 0x427271, 0x325D8D, 0xB8159F, 0x09E5BC,
			0x25318D, 0x3974F7, 0x1C0530, 0x010C0D, 0x68084B, 0x58EE2C,
			0x90AA47, 0x02E774, 0x24D6BD, 0xA67DF7, 0x72486E, 0xEF169F,
			0xA6948E, 0xF691B4, 0x5153D1, 0xF20ACF, 0x339820, 0x7E4BF5,
			0x6863B2, 0x5F3EDD, 0x035D40, 0x7F8985, 0x295255, 0xC06437,
			0x10D86D, 0x324832, 0x754C5B, 0xD4714E, 0x6E5445, 0xC1090B,
			0x69F52A, 0xD56614, 0x9D0727, 0x50045D, 0xDB3BB4, 0xC576EA,
			0x17F987, 0x7D6B49, 0xBA271D, 0x296996, 0xACCCC6, 0x5414AD,
			0x6AE290, 0x89D988, 0x50722C, 0xBEA404, 0x940777, 0x7030F3,
			0x27FC00, 0xA871EA, 0x49C266, 0x3DE064, 0x83DD97, 0x973FA3,
			0xFD9443, 0x8C860D, 0xDE4131, 0x9D3992, 0x8C70DD, 0xE7B717,
			0x3BDF08, 0x2B3715, 0xA0805C, 0x93805A, 0x921110, 0xD8E80F,
			0xAF806C, 0x4BFFDB, 0x0F9038, 0x761859, 0x15A562, 0xBBCB61,
			0xB989C7, 0xBD4010, 0x04F2D2, 0x277549, 0xF6B6EB, 0xBB22DB,
			0xAA140A, 0x2F2689, 0x768364, 0x333B09, 0x1A940E, 0xAA3A51,
			0xC2A31D, 0xAEEDAF, 0x12265C, 0x4DC26D, 0x9C7A2D, 0x9756C0,
			0x833F03, 0xF6F009, 0x8C402B, 0x99316D, 0x07B439, 0x15200C,
			0x5BC3D8, 0xC492F5, 0x4BADC6, 0xA5CA4E, 0xCD37A7, 0x36A9E6,
			0x9492AB, 0x6842DD, 0xDE6319, 0xEF8C76, 0x528B68, 0x37DBFC,
			0xABA1AE, 0x3115DF, 0xA1AE00, 0xDAFB0C, 0x664D64, 0xB705ED,
			0x306529, 0xBF5657, 0x3AFF47, 0xB9F96A, 0xF3BE75, 0xDF9328,
			0x3080AB, 0xF68C66, 0x15CB04, 0x0622FA, 0x1DE4D9, 0xA4B33D,
			0x8F1B57, 0x09CD36, 0xE9424E, 0xA4BE13, 0xB52333, 0x1AAAF0,
			0xA8654F, 0xA5C1D2, 0x0F3F0B, 0xCD785B, 0x76F923, 0x048B7B,
			0x721789, 0x53A6C6, 0xE26E6F, 0x00EBEF, 0x584A9B, 0xB7DAC4,
			0xBA66AA, 0xCFCF76, 0x1D02D1, 0x2DF1B1, 0xC1998C, 0x77ADC3,
			0xDA4886, 0xA05DF7, 0xF480C6, 0x2FF0AC, 0x9AECDD, 0xBC5C3F,
			0x6DDED0, 0x1FC790, 0xB6DB2A, 0x3A25A3, 0x9AAF00, 0x9353AD,
			0x0457B6, 0xB42D29, 0x7E804B, 0xA707DA, 0x0EAA76, 0xA1597B,
			0x2A1216, 0x2DB7DC, 0xFDE5FA, 0xFEDB89, 0xFDBE89, 0x6C76E4,
			0xFCA906, 0x70803E, 0x156E85, 0xFF87FD, 0x073E28, 0x336761,
			0x86182A, 0xEABD4D, 0xAFE7B3, 0x6E6D8F, 0x396795, 0x5BBF31,
			0x48D784, 0x16DF30, 0x432DC7, 0x356125, 0xCE70C9, 0xB8CB30,
			0xFD6CBF, 0xA200A4, 0xE46C05, 0xA0DD5A, 0x476F21, 0xD21262,
			0x845CB9, 0x496170, 0xE0566B, 0x015299, 0x375550, 0xB7D51E,
			0xC4F133, 0x5F6E13, 0xE4305D, 0xA92E85, 0xC3B21D, 0x3632A1,
			0xA4B708, 0xD4B1EA, 0x21F716, 0xE4698F, 0x77FF27, 0x80030C,
			0x2D408D, 0xA0CD4F, 0x99A520, 0xD3A2B3, 0x0A5D2F, 0x42F9B4,
			0xCBDA11, 0xD0BE7D, 0xC1DB9B, 0xBD17AB, 0x81A2CA, 0x5C6A08,
			0x17552E, 0x550027, 0xF0147F, 0x8607E1, 0x640B14, 0x8D4196,
			0xDEBE87, 0x2AFDDA, 0xB6256B, 0x34897B, 0xFEF305, 0x9EBFB9,
			0x4F6A68, 0xA82A4A, 0x5AC44F, 0xBCF82D, 0x985AD7, 0x95C7F4,
			0x8D4D0D, 0xA63A20, 0x5F57A4, 0xB13F14, 0x953880, 0x0120CC,
			0x86DD71, 0xB6DEC9, 0xF560BF, 0x11654D, 0x6B0701, 0xACB08C,
			0xD0C0B2, 0x485551, 0x0EFB1E, 0xC37295, 0x3B06A3, 0x3540C0,
			0x7BDC06, 0xCC45E0, 0xFA294E, 0xC8CAD6, 0x41F3E8, 0xDE647C,
			0xD8649B, 0x31BED9, 0xC397A4, 0xD45877, 0xC5E369, 0x13DAF0,
			0x3C3ABA, 0x461846, 0x5F7555, 0xF5BDD2, 0xC6926E, 0x5D2EAC,
			0xED440E, 0x423E1C, 0x87C461, 0xE9FD29, 0xF3D6E7, 0xCA7C22,
			0x35916F, 0xC5E008, 0x8DD7FF, 0xE26A6E, 0xC6FDB0, 0xC10893,
			0x745D7C, 0xB2AD6B, 0x9D6ECD, 0x7B723E, 0x6A11C6, 0xA9CFF7,
			0xDF7329, 0xBAC9B5, 0x5100B7, 0x0DB2E2, 0x24BA74, 0x607DE5,
			0x8AD874, 0x2C150D, 0x0C1881, 0x94667E, 0x162901, 0x767A9F,
			0xBEFDFD, 0xEF4556, 0x367ED9, 0x13D9EC, 0xB9BA8B, 0xFC97C4,
			0x27A831, 0xC36EF1, 0x36C594, 0x56A8D8, 0xB5A8B4, 0x0ECCCF,
			0x2D8912, 0x34576F, 0x89562C, 0xE3CE99, 0xB920D6, 0xAA5E6B,
			0x9C2A3E, 0xCC5F11, 0x4A0BFD, 0xFBF4E1, 0x6D3B8E, 0x2C86E2,
			0x84D4E9, 0xA9B4FC, 0xD1EEEF, 0xC9352E, 0x61392F, 0x442138,
			0xC8D91B, 0x0AFC81, 0x6A4AFB, 0xD81C2F, 0x84B453, 0x8C994E,
			0xCC2254, 0xDC552A, 0xD6C6C0, 0x96190B, 0xB8701A, 0x649569,
			0x605A26, 0xEE523F, 0x0F117F, 0x11B5F4, 0xF5CBFC, 0x2DBC34,
			0xEEBC34, 0xCC5DE8, 0x605EDD, 0x9B8E67, 0xEF3392, 0xB817C9,
			0x9B5861, 0xBC57E1, 0xC68351, 0x103ED8, 0x4871DD, 0xDD1C2D,
			0xA118AF, 0x462C21, 0xD7F359, 0x987AD9, 0xC0549E, 0xFA864F,
			0xFC0656, 0xAE79E5, 0x362289, 0x22AD38, 0xDC9367, 0xAAE855,
			0x382682, 0x9BE7CA, 0xA40D51, 0xB13399, 0x0ED7A9, 0x480569,
			0xF0B265, 0xA7887F, 0x974C88, 0x36D1F9, 0xB39221, 0x4A827B,
			0x21CF98, 0xDC9F40, 0x5547DC, 0x3A74E1, 0x42EB67, 0xDF9DFE,
			0x5FD45E, 0xA4677B, 0x7AACBA, 0xA2F655, 0x23882B, 0x55BA41,
			0x086E59, 0x862A21, 0x834739, 0xE6E389, 0xD49EE5, 0x40FB49,
			0xE956FF, 0xCA0F1C, 0x8A59C5, 0x2BFA94, 0xC5C1D3, 0xCFC50F,
			0xAE5ADB, 0x86C547, 0x624385, 0x3B8621, 0x94792C, 0x876110,
			0x7B4C2A, 0x1A2C80, 0x12BF43, 0x902688, 0x893C78, 0xE4C4A8,
			0x7BDBE5, 0xC23AC4, 0xEAF426, 0x8A67F7, 0xBF920D, 0x2BA365,
			0xB1933D, 0x0B7CBD, 0xDC51A4, 0x63DD27, 0xDDE169, 0x19949A,
			0x9529A8, 0x28CE68, 0xB4ED09, 0x209F44, 0xCA984E, 0x638270,
			0x237C7E, 0x32B90F, 0x8EF5A7, 0xE75614, 0x08F121, 0x2A9DB5,
			0x4D7E6F, 0x5119A5, 0xABF9B5, 0xD6DF82, 0x61DD96, 0x023616,
			0x9F3AC4, 0xA1A283, 0x6DED72, 0x7A8D39, 0xA9B882, 0x5C326B,
			0x5B2746, 0xED3400, 0x7700D2, 0x55F4FC, 0x4D5901, 0x8071E0,
		];

		public static ReadOnlySpan<double> PIO2 =>
		[
			1.57079625129699707031e+00,
			7.54978941586159635335e-08,
			5.39030252995776476554e-15,
			3.28200341580791294123e-22,
			1.27065575308067607349e-29,
			1.22933308981111328932e-36,
			2.73370053816464559624e-44,
			2.16741683877804819444e-51,
		];
	}
	public static class Pow
	{
		public static ReadOnlySpan<Quad> bp => new Quad[]
		{
			Quad.One,
			new Quad(0x3FFF_8000_0000_0000, 0x0000_0000_0000_0000),
		};
		public static ReadOnlySpan<Quad> dp_h => new Quad[]
		{
			Quad.Zero,
			new Quad(0x3FFE_2B80_3473_F7AD, 0x0000_0000_0000_0000),
		};
		public static ReadOnlySpan<Quad> dp_l => new Quad[]
		{
			Quad.Zero,
			new Quad(0x3FC9_E7E8_02C4_8281, 0xA2EB_7449_3CF9_A8E9),
		};

		public static Quad Two113 => new Quad(0x4070_0000_0000_0000, 0x0000_0000_0000_0000);
		public static Quad Huge => new Quad(0x66EC_B8E4_99A8_8823, 0x5EA6_6F64_97E3_640C);
		public static Quad Tiny => new Quad(0x1911_2949_9E40_33AF, 0x742A_E235_CC08_1BCC);

		/* 3/2 log x = 3 z + z^3 + z^3 (z^2 R(z^2))
		z = (x-1)/(x+1)
		1 <= x <= 1.25
		Peak relative error 2.3e-37 */
		public static ReadOnlySpan<Quad> LN => new Quad[]
		{
			new Quad(0xC003_EC77_8283_108D, 0xD351_763D_521C_F8D2),
			new Quad(0x4005_048B_0968_DA68, 0x634C_653D_9344_2FEA),
			new Quad(0xC004_7280_DD26_AB32, 0xBBA2_2AE6_2447_44E8),
			new Quad(0x4002_9053_A023_4C25, 0x1CD1_C99C_785B_5FD7),
			new Quad(0xBFFE_FC3F_1F7D_5799, 0xD1FB_8916_3835_3084),
		};
		public static ReadOnlySpan<Quad> LD => new Quad[]
		{
			new Quad(0xC004_9A63_976D_3876, 0x3019_37DD_C470_295E),
			new Quad(0x4006_2267_2C06_4F53, 0xB6C4_2A88_A788_8557),
			new Quad(0xC006_30CF_0405_7312, 0xCE1C_70B9_C662_0DC8),
			new Quad(0x4005_2171_4A56_547D, 0x4169_123F_BEA8_F6A3),
			new Quad(0xC002_DE24_C65F_C66A, 0x9601_94F8_F1D9_F146),
		};

		/* exp(x) = 1 + x - x / (1 - 2 / (x - x^2 R(x^2)))
		0 <= x <= 0.5
		Peak relative error 5.7e-38  */
		public static ReadOnlySpan<Quad> PN => new Quad[]
		{
			new Quad(0x401B_E4A3_6C93_1089, 0xE86D_ACEC_7D0C_4054),
			new Quad(0x4016_1DAB_FE99_88E2, 0xE3E6_18A4_38A1_5AF6),
			new Quad(0x400E_4932_0690_B3D2, 0xBAA8_F4FD_B268_3287),
			new Quad(0x4004_A014_9D04_634B, 0x152F_8666_0A12_0EFC),
			new Quad(0x3FF8_29CE_C291_D944, 0x9CC0_10B8_DCC7_94E7),
		};
		public static ReadOnlySpan<Quad> PD => new Quad[]
		{
			new Quad(0x401E_6B7A_916E_4C67, 0x6E52_41B1_5DC9_3056),
			new Quad(0x4019_981B_F72D_FA14, 0x87E5_3E0C_F616_1D0C),
			new Quad(0x4012_9348_B8B2_7A6A, 0x2C43_03B1_2D43_967F),
			new Quad(0x4009_D425_5D86_476D, 0x8725_A341_C32C_275E),
		};

		/* ln 2 */
		public static Quad LG2 => new Quad(0x3FFE_62E4_2FEF_A39E, 0xF357_93C7_6730_07E6);
		public static Quad LG2_H => new Quad(0x3FFE_62E4_2FEF_A39E, 0xF000_0000_0000_0000);
		public static Quad LG2_L => new Quad(0x3FC7_ABC9_E3B3_9803, 0xF2F6_AF40_F343_2673);
		public static Quad OVT => new Quad(0x3FC9_7154_7652_B82F, 0xE459_FDE3_A492_DA6D);
		/* 2/(3*log(2)) */
		public static Quad CP => new Quad(0x3FFE_EC70_9DC3_A03F, 0xD749_FC15_522B_C2F9);
		public static Quad CP_H => new Quad(0x3FFE_EC70_9DC3_A03F, 0xD000_0000_0000_0000);
		public static Quad CP_L => new Quad(0x3FC8_D27F_0554_8AF0, 0xBE29_B09C_E4FC_7094);


		[StructLayout(LayoutKind.Explicit, Size = 16)]
		public unsafe struct QuadShape
		{
			[FieldOffset(0)] public Quad Value;

#if BIGENDIAN
			[FieldOffset(0)] public ulong Upper;
			[FieldOffset(8)] public ulong Lower;

			[FieldOffset(0)] public uint UpperHi;
			[FieldOffset(4)] public uint UpperLo;
			[FieldOffset(8)] public uint LowerHi;
			[FieldOffset(12)] public uint LowerLo;
#else
			[FieldOffset(0)] public ulong Lower;
			[FieldOffset(8)] public ulong Upper;

			[FieldOffset(0)] public uint LowerLo;
			[FieldOffset(4)] public uint LowerHi;
			[FieldOffset(8)] public uint UpperLo;
			[FieldOffset(12)] public uint UpperHi;
#endif
		}
	}
}
